{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/web-maker/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [divCount, setDivCount] = useState(0);\n  const [displayButtons, setDisplayButtons] = useState(false);\n  const [array, setArray] = useState([\"\"]);\n  const [input, setInput] = useState(\"\");\n  const [savedIndex, setSavedIndex] = useState(1);\n  const [editCount, setEditCount] = useState(0);\n  const map = {\n    div: []\n  };\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1);\n    var newArray;\n    array.push(input);\n    var newArray = array;\n    setArray(newArray);\n  };\n\n  const handleInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleDiv = (content, index, event) => {\n    setInput(content);\n    setSavedIndex(index);\n    setDisplayButtons(true);\n  };\n\n  const editDiv = () => {\n    var newArray = array;\n    newArray[savedIndex] = input;\n    setArray(newArray);\n    setEditCount(editCount + 1);\n    setDisplayButtons(false);\n  };\n\n  const logStyle = e => {\n    console.log(e.target.style.borderStyle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToDivCount,\n      children: \" Add div \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      value: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editDiv,\n      className: displayButtons ? \"displayButtons\" : \"notDisplayButtons\",\n      children: \" Edit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", divCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", editCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", array.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          console.log(logStyle);\n          handleDiv(x, i, e);\n          e.target.style.borderStyle = \"solid\";\n        },\n        children: [\" \", x, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cJSkDGy4EluxI3urRQ9XMRYf8V0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/web-maker/src/App.tsx"],"names":["React","useState","App","divCount","setDivCount","displayButtons","setDisplayButtons","array","setArray","input","setInput","savedIndex","setSavedIndex","editCount","setEditCount","map","div","addToDivCount","newArray","push","handleInput","event","target","value","handleDiv","content","index","editDiv","logStyle","e","console","log","style","borderStyle","x","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [divCount, setDivCount] = useState(0)\n  const [displayButtons, setDisplayButtons] = useState(false)\n  const [array, setArray] = useState([\"\"])\n  const [input, setInput] = useState(\"\")\n  const [savedIndex, setSavedIndex] = useState(1)\n  const [editCount, setEditCount] = useState(0)\n  const map = {\n    div: []\n  }\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1)\n    var newArray: string[]\n    array.push(input)\n    var newArray = array\n    setArray(newArray)\n  }\n\n  const handleInput = (event: any) => {\n    setInput(event.target.value)\n  }\n\n  const handleDiv = (content: string, index: number, event: any) => {\n    setInput(content)\n    setSavedIndex(index)\n    setDisplayButtons(true)\n  }\n\n  const editDiv = () => {\n    var newArray = array\n    newArray[savedIndex] = input\n    setArray(newArray)\n    setEditCount(editCount + 1)\n    setDisplayButtons(false)\n  }\n\n  const logStyle = (e: any) => {\n    console.log(e.target.style.borderStyle)\n  }\n  \n  return (\n    <div className=\"App\">\n      <button onClick={addToDivCount}> Add div </button>\n      <input type=\"text\" onChange={handleInput} value={input}></input>\n      <button onClick={editDiv} className={displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}> Edit </button>\n      <h1> {divCount} </h1>\n      <h1> {editCount} </h1>\n      <div> {\n        array.map((x, i) => (\n          <div onClick={(e: any) => {\n            console.log(logStyle)\n            handleDiv(x, i, e)\n            e.target.style.borderStyle = \"solid\";\n          }}> {x} </div>\n          )\n        )\n      }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}