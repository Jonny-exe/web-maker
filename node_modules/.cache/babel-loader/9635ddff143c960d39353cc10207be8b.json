{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/a/Documents/GitHub/web-maker/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [divCount, setDivCount] = useState(0);\n  const [displayButtons, setDisplayButtons] = useState(false);\n  const [array, setArray] = useState([\"\"]);\n  const [input, setInput] = useState(\"\");\n  const [savedIndex, setSavedIndex] = useState(1);\n  const [savedStyle, setSavedStyle] = useState({\n    borderStyle: \"\"\n  });\n  const [editCount, setEditCount] = useState(0);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1);\n    var newArray;\n    array.push(input);\n    var newArray = array;\n    setArray(newArray);\n  };\n\n  const handleInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleDiv = (content, index, event) => {\n    setInput(content);\n    setSavedIndex(index);\n    setSavedStyle(event.target.style);\n    setDisplayButtons(true);\n  };\n\n  const editDiv = () => {\n    var newArray = array;\n    newArray[savedIndex] = input;\n    setArray(newArray);\n    setEditCount(editCount + 1);\n    setDisplayButtons(false);\n    savedStyle.borderStyle = \"none\";\n  };\n\n  const logStyle = e => {\n    console.log(e.target.style.borderStyle);\n  };\n\n  const handlePreview = () => {\n    setPreviewMode(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: previewMode ? \"previewMode\" : \"\",\n      onClick: handlePreview,\n      children: \" Preview \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: previewMode ? \"\" : \"previewMode\",\n      onClick: handlePreview,\n      children: \" UnPreview \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: previewMode ? \"previewMode\" : \"\",\n      onClick: addToDivCount,\n      children: \" Add div \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: previewMode ? \"previewMode\" : \"\",\n      onChange: handleInput,\n      value: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editDiv,\n      className: `${previewMode ? \"previewMode\" : \"\"} ${displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`,\n      children: \" Edit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: previewMode ? \"previewMode\" : \"\",\n      children: [\" \", divCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: previewMode ? \"previewMode\" : \"\",\n      children: [\" \", editCount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", array.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          console.log(logStyle);\n          handleDiv(x, i, e);\n          savedStyle.borderStyle = \"\";\n          e.target.style.border = \"1px solid black\";\n          e.target.style.borderRadius = \"5px\";\n        },\n        children: [\" \", x, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1NL4UQM4iDneDEctsdw7TtnIeV0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/a/Documents/GitHub/web-maker/src/App.tsx"],"names":["React","useState","App","divCount","setDivCount","displayButtons","setDisplayButtons","array","setArray","input","setInput","savedIndex","setSavedIndex","savedStyle","setSavedStyle","borderStyle","editCount","setEditCount","previewMode","setPreviewMode","addToDivCount","newArray","push","handleInput","event","target","value","handleDiv","content","index","style","editDiv","logStyle","e","console","log","handlePreview","map","x","i","border","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [divCount, setDivCount] = useState(0)\n  const [displayButtons, setDisplayButtons] = useState(false)\n  const [array, setArray] = useState([\"\"])\n  const [input, setInput] = useState(\"\")\n  const [savedIndex, setSavedIndex] = useState(1)\n  const [savedStyle, setSavedStyle] = useState({borderStyle: \"\"})\n  const [editCount, setEditCount] = useState(0)\n  const [previewMode, setPreviewMode] = useState(false)\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1)\n    var newArray: string[]\n    array.push(input)\n    var newArray = array\n    setArray(newArray)\n  }\n\n  const handleInput = (event: any) => {\n    setInput(event.target.value)\n  }\n\n  const handleDiv = (content: string, index: number, event: any) => {\n    setInput(content)\n    setSavedIndex(index)\n    setSavedStyle(event.target.style)\n    setDisplayButtons(true)\n  }\n\n  const editDiv = () => {\n    var newArray = array\n    newArray[savedIndex] = input\n    setArray(newArray)\n    setEditCount(editCount + 1)\n    setDisplayButtons(false)\n    savedStyle.borderStyle = \"none\"\n  }\n\n  const logStyle = (e: any) => {\n    console.log(e.target.style.borderStyle)\n  }\n\n  const handlePreview = () => {\n    setPreviewMode(true)\n  }\n  \n  return (\n    <div className=\"App\">\n      <button className={previewMode ? \"previewMode\" : \"\"} onClick={handlePreview}> Preview </button>\n      <button className={previewMode ? \"\" : \"previewMode\"} onClick={handlePreview}> UnPreview </button>\n      <button className={previewMode ? \"previewMode\" : \"\"} onClick={addToDivCount}> Add div </button>\n      <input type=\"text\" className={previewMode ? \"previewMode\" : \"\"} onChange={handleInput} value={input}></input>\n      <button onClick={editDiv} className={`${previewMode ? \"previewMode\" : \"\"} ${displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`}> Edit </button>\n      <h1 className={previewMode ? \"previewMode\" : \"\"}> {divCount} </h1>\n      <h1 className={previewMode ? \"previewMode\" : \"\"}> {editCount} </h1>\n      <div> {\n        array.map((x, i) => (\n          <div onClick={(e: any) => {\n            console.log(logStyle)\n            handleDiv(x, i, e)\n            savedStyle.borderStyle = \"\"\n            e.target.style.border = \"1px solid black\"\n            e.target.style.borderRadius = \"5px\"\n          }}> {x} </div>\n          )\n        )\n      }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}