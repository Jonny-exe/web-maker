[{"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx":"1","/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts":"2","/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx":"3","/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx":"4","/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx":"5","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx":"6","/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx":"7","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/Modal.tsx":"8","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalEditPlacement.tsx":"9","/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx":"10","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalTable.tsx":"11","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImage.tsx":"12","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx":"13","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLogin.tsx":"14","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx":"15","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx":"16","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImageSizeTable.tsx":"17","/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx":"18","/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx":"19","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/CreateOrImportProject.tsx":"20","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/SaveOrExportProject.tsx":"21","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/DownloadProject.tsx":"22","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/InsertRecoveryKey.tsx":"23","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/GiveNewProjectToken.tsx":"24","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/ImportProject.tsx":"25","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/InsertRecoveryKeyToGetToken.tsx":"26","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/GiveNewProjectTokenFromRecoveryKey.tsx":"27","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddButton.tsx":"28","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddItem.tsx":"29","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddImage.tsx":"30","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddTable.tsx":"31","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddTextCollumn.tsx":"32","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/Settings.tsx":"33","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsButton.tsx":"34","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsModal.tsx":"35","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsStylesModal.tsx":"36","/home/a/Documents/GitHub/web-maker/web-maker/src/constants/defaultTypes.tsx":"37","/home/a/Documents/GitHub/web-maker/web-maker/src/constants/exceptionItems.tsx":"38","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/ToggleDarkMode.tsx":"39"},{"size":489,"mtime":1609795991180,"results":"40","hashOfConfig":"41"},{"size":421,"mtime":1609711480140,"results":"42","hashOfConfig":"41"},{"size":3086,"mtime":1609960141896,"results":"43","hashOfConfig":"41"},{"size":487,"mtime":1609711987062,"results":"44","hashOfConfig":"41"},{"size":598,"mtime":1609712156079,"results":"45","hashOfConfig":"41"},{"size":2573,"mtime":1609937911586,"results":"46","hashOfConfig":"41"},{"size":756,"mtime":1609788728522,"results":"47","hashOfConfig":"41"},{"size":905,"mtime":1609761263017,"results":"48","hashOfConfig":"41"},{"size":2134,"mtime":1609862277076,"results":"49","hashOfConfig":"41"},{"size":2511,"mtime":1609796462550,"results":"50","hashOfConfig":"41"},{"size":1161,"mtime":1609937911558,"results":"51","hashOfConfig":"41"},{"size":1431,"mtime":1609937911382,"results":"52","hashOfConfig":"41"},{"size":1439,"mtime":1609860190428,"results":"53","hashOfConfig":"41"},{"size":7895,"mtime":1609886521009,"results":"54","hashOfConfig":"41"},{"size":1064,"mtime":1609784371517,"results":"55","hashOfConfig":"41"},{"size":1222,"mtime":1609711987114,"results":"56","hashOfConfig":"41"},{"size":1163,"mtime":1609711986946,"results":"57","hashOfConfig":"41"},{"size":8813,"mtime":1609955400515,"results":"58","hashOfConfig":"41"},{"size":715,"mtime":1609711480012,"results":"59","hashOfConfig":"41"},{"size":1107,"mtime":1609884906458,"results":"60","hashOfConfig":"41"},{"size":1826,"mtime":1609957043818,"results":"61","hashOfConfig":"41"},{"size":835,"mtime":1609960243224,"results":"62","hashOfConfig":"41"},{"size":1949,"mtime":1609957115132,"results":"63","hashOfConfig":"41"},{"size":1074,"mtime":1609957167815,"results":"64","hashOfConfig":"41"},{"size":1589,"mtime":1609957130347,"results":"65","hashOfConfig":"41"},{"size":1356,"mtime":1609957099232,"results":"66","hashOfConfig":"41"},{"size":1185,"mtime":1609957149139,"results":"67","hashOfConfig":"41"},{"size":2515,"mtime":1609794353881,"results":"68","hashOfConfig":"41"},{"size":622,"mtime":1609863384073,"results":"69","hashOfConfig":"41"},{"size":910,"mtime":1609863405589,"results":"70","hashOfConfig":"41"},{"size":1437,"mtime":1609863414233,"results":"71","hashOfConfig":"41"},{"size":565,"mtime":1609863430369,"results":"72","hashOfConfig":"41"},{"size":1171,"mtime":1609959828948,"results":"73","hashOfConfig":"41"},{"size":582,"mtime":1609937911614,"results":"74","hashOfConfig":"41"},{"size":2721,"mtime":1609959744914,"results":"75","hashOfConfig":"41"},{"size":2412,"mtime":1609946075393,"results":"76","hashOfConfig":"41"},{"size":2127,"mtime":1609946075421,"results":"77","hashOfConfig":"41"},{"size":211,"mtime":1609886191887,"results":"78","hashOfConfig":"41"},{"size":850,"mtime":1609960220082,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1g3hzks",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx",[],["170","171"],"/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx",["172"],"/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx",["173"],"import React, { useEffect, useState } from \"react\"\nimport { notEditable } from \"./constants/exceptionItems\"\nimport RenderContent1 from \"./RenderContent1\"\n\nexport const RenderContent = (props: any) => {\n\tconst [holdCounter, setHoldCounter] = useState(-1)\n\tconst [cancelHover, setCancelHover] = useState(false)\n\tuseEffect(() => {\n\t\tif (props.itemIndex !== -1 && holdCounter !== -1) {\n\t\t\tif (!cancelHover) {\n\t\t\t\tif (holdCounter < 4) {\n\t\t\t\t\tvar timer = setTimeout(increaseHoldIndex, 75)\n\t\t\t\t} else {\n\t\t\t\t\tsetHoldCounter(-1)\n\t\t\t\t\tprops.setModalEditPlacementActive(true)\n\t\t\t\t\tsetCancelHover(true)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetHoldCounter(-1)\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t}, [holdCounter])\n\n\tconst increaseHoldIndex = () => {\n\t\tsetHoldCounter(holdCounter + 1)\n\t}\n\n\tconst handleMouseDown = (index: number) => {\n\t\tif (props.setItemIndex !== undefined) {\n\t\t\tprops.setItemIndex(index)\n\t\t}\n\t\tincreaseHoldIndex()\n\t\tsetCancelHover(false)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{props.content.map((item: any, index: number) =>\n\t\t\t\titem.type === \"bodyContent\" ? (\n\t\t\t\t\t<></>\n\t\t\t\t) : (\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: item.style,\n\t\t\t\t\t\t\tsrc: item.type === \"img\" ? item.src : null,\n\t\t\t\t\t\t\talt: item.type === \"img\" ? \"Image\" : null,\n\t\t\t\t\t\t\tcontentEditable:\n\t\t\t\t\t\t\t\tnotEditable.includes(item.type) || props.previewMode\n\t\t\t\t\t\t\t\t\t? \"false\"\n\t\t\t\t\t\t\t\t\t: \"true\", // this is has to be like this because if not it doesnt detect the td only the table\n\t\t\t\t\t\t\tkey: index,\n\t\t\t\t\t\t\tplaceholder:\n\t\t\t\t\t\t\t\t(notEditable.includes(item.type) && item.type !== \"div\") ||\n\t\t\t\t\t\t\t\t!props.previewMode\n\t\t\t\t\t\t\t\t\t? item.text\n\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\tcontent: \"\",\n\t\t\t\t\t\t\tonInput: (e: any) => {\n\t\t\t\t\t\t\t\titem.content = e.target.textContent\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonMouseDown: (e: any) => {\n\t\t\t\t\t\t\t\thandleMouseDown(index)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonMouseUp: (e: any) => {\n\t\t\t\t\t\t\t\tsetHoldCounter(-1)\n\t\t\t\t\t\t\t\tsetCancelHover(true)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\titem.children !== null &&\n\t\t\t\t\t\t\titem.children !== undefined &&\n\t\t\t\t\t\t\titem.children.length !== 0 ? (\n\t\t\t\t\t\t\t<RenderContent1\n\t\t\t\t\t\t\t\tcontent={item.children}\n\t\t\t\t\t\t\t\tsetModalEditPlacementActive={props.setModalEditPlacementActive}\n\t\t\t\t\t\t\t\tpreviewMode={props.previewMode}\n\t\t\t\t\t\t\t\tsetSavedStyle={props.setSavedStyle}\n\t\t\t\t\t\t\t\tsetItemIndex={props.setItemIndex}\n\t\t\t\t\t\t\t\titemIndex={props.itemIndex}\n\t\t\t\t\t\t\t\tsavedStyle={props.savedStyle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : item.type === \"img\" ? null : (\n\t\t\t\t\t\t\titem.content\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default RenderContent\n","/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/Modal.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalEditPlacement.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalTable.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImage.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLogin.tsx",["174","175","176","177","178","179","180"],"import React, { useEffect, useState } from \"react\"\nimport { textStyle } from \"../constants/exceptionItems\"\nimport {\n\tSaveProject,\n\tCreateProjectTokenRecovery,\n\tCreateProjectTokenObject,\n\tGetTokenFromRecovery,\n\tGetContentFromToken,\n\tGetFile,\n\tRemoveFile,\n\tCheckRecoveryKey,\n} from \"../requests\"\nimport CreateOrImportProject from \"./ModalLoginComponents/CreateOrImportProject\"\nimport DownloadProject from \"./ModalLoginComponents/DownloadProject\"\nimport GiveNewProjectToken from \"./ModalLoginComponents/GiveNewProjectToken\"\nimport GiveNewProjectTokenFromRecoveryKey from \"./ModalLoginComponents/GiveNewProjectTokenFromRecoveryKey\"\nimport ImportProject from \"./ModalLoginComponents/ImportProject\"\nimport InsertRecoveryKey from \"./ModalLoginComponents/InsertRecoveryKey\"\nimport InsertRecoveryKeyToGetToken from \"./ModalLoginComponents/InsertRecoveryKeyToGetToken\"\nimport SaveOrExportProject from \"./ModalLoginComponents/SaveOrExportProject\"\n\nconst ModalLogin = (props: any) => {\n\tconst [\n\t\twaitingForTokenFromRecoveryKey,\n\t\tsetWaitingForTokenFromRecoveryKey,\n\t] = useState(false)\n\tconst [getFileCount, setGetFileCount] = useState(0)\n\tconst [removeFileCount, setRemoveFileCount] = useState(0)\n\tconst [getFileActivated, setGetFileActivated] = useState(false)\n\tconst [removeFileActivated, setRemoveFileActivated] = useState(false)\n\tconst [waitingForToken, setWaitingForToken] = useState(false)\n\tconst [recoveryKeyInputValue, setRecoveryKeyInputValue] = useState(\"\")\n\tconst [\n\t\ttokenFromRecoveryKeyInputValue,\n\t\tsetTokenFromRecoveryKeyInputValue,\n\t] = useState(\"\")\n\tconst [tokenInputValue, setTokenInputValue] = useState(props.token)\n\tconst [createProjectActivated, setCreateProjectActivated] = useState(false)\n\tconst [recoverTokenActivated, setRecoverTokenActivated] = useState(false)\n\tconst [importProjectActivated, setImportProjectActivated] = useState(false)\n\tconst [sentCount, setSentCount] = useState(0)\n\tconst [createCount, setCreateCount] = useState(0)\n\tconst [getContentCount, setGetContentCount] = useState(0)\n\tconst [recoverTokenCount, setRecoverTokenCount] = useState(0)\n\tconst [checkRecoveryKeyCount, setCheckRecoveryKeyCount] = useState(0)\n\tconst [recoveryTooLong, setRecoveryTooLong] = useState(false)\n\tconst [saveClicked, setSaveClicked] = useState(false)\n\tconst [tokenToSet, setTokenToSet] = useState(\"\")\n\tvar { responseSavedStatus, loadingSaved } = SaveProject(\n\t\tsentCount,\n\t\tprops.token,\n\t\tprops.content\n\t)\n\tvar { responseToken, loadingResponseToken } = CreateProjectTokenRecovery(\n\t\trecoveryKeyInputValue,\n\t\tcreateCount\n\t)\n\tCreateProjectTokenObject(props.content, props.token)\n\tvar { responseTokenFromRecovery } = GetTokenFromRecovery(\n\t\ttokenFromRecoveryKeyInputValue,\n\t\trecoverTokenCount\n\t)\n\tvar { loadingGetFile } = GetFile(props.token, getFileCount)\n\tRemoveFile(props.token, removeFileCount)\n\tvar { responseContent } = GetContentFromToken(\n\t\ttokenInputValue,\n\t\tgetContentCount\n\t)\n\tvar { checkRecoveryKeyStatus, loadingCheckRecoveryKey } = CheckRecoveryKey(\n\t\trecoveryKeyInputValue,\n\t\tcheckRecoveryKeyCount\n\t)\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tresponseContent !== null &&\n\t\t\tresponseContent !== undefined &&\n\t\t\tresponseContent.length !== 0\n\t\t) {\n\t\t\tprops.setContent(responseContent)\n\t\t\tdebugger\n\t\t}\n\t}, [responseContent])\n\n\tuseEffect(() => {\n\t\tif (!loadingCheckRecoveryKey && checkRecoveryKeyStatus === 200) {\n\t\t\tcreateProject()\n\t\t}\n\t}, [checkRecoveryKeyStatus, loadingCheckRecoveryKey])\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!loadingResponseToken &&\n\t\t\tresponseToken !== null &&\n\t\t\tresponseToken !== \"\"\n\t\t) {\n\t\t\tsetTokenToSet(responseToken)\n\t\t}\n\t}, [responseToken])\n\n\tuseEffect(() => {\n\t\tif (!props.loginModalState && tokenToSet != \"\") {\n\t\t\tprops.setToken(tokenToSet)\n\t\t\tlocalStorage.setItem(\"web-maker-token\", tokenToSet)\n\t\t}\n\t}, [tokenToSet, props.loginModalState])\n\n\tconst saveOnClick = () => {\n\t\tsetSentCount(sentCount + 1)\n\t\tsetSaveClicked(true)\n\t}\n\n\tconst createProject = () => {\n\t\tif (recoveryKeyInputValue.length > 29) {\n\t\t\tsetRecoveryTooLong(true)\n\t\t} else {\n\t\t\tsetCreateCount(createCount + 1)\n\t\t\tsetWaitingForToken(true)\n\t\t}\n\t}\n\n\tconst importProject = () => {\n\t\tsetGetContentCount(getContentCount + 1)\n\t\t// props.setToken(tokenInputValue)\n\t\tsetTokenToSet(tokenInputValue)\n\t\thideModal()\n\t}\n\n\tconst hideModal = () => {\n\t\tprops.setLoginModalStateActive(false)\n\t\tsetRecoveryTooLong(false)\n\t\tsetSaveClicked(false)\n\t\tsetCreateProjectActivated(false)\n\t\tsetWaitingForToken(false)\n\t\tif (tokenToSet != \"\") {\n\t\t\tprops.setToken(tokenToSet)\n\t\t}\n\t\tsetWaitingForTokenFromRecoveryKey(false)\n\t\tsetImportProjectActivated(false)\n\t\tsetRecoverTokenActivated(false)\n\t\tsetGetFileActivated(false)\n\t\tif (removeFileActivated) {\n\t\t\tsetRemoveFileCount(removeFileCount + 1)\n\t\t\tsetRemoveFileActivated(false)\n\t\t}\n\t}\n\tconst getFile = () => {\n\t\tsetGetFileActivated(true)\n\t\tsetGetFileCount(getFileCount + 1)\n\t\tsetRemoveFileActivated(true)\n\t}\n\n\tconst recoverToken = () => {\n\t\tsetRecoverTokenCount(recoverTokenCount + 1)\n\t\tsetWaitingForTokenFromRecoveryKey(true)\n\t}\n\n\tif (\n\t\tprops.token === \"\" &&\n\t\t!createProjectActivated &&\n\t\t!importProjectActivated\n\t) {\n\t\treturn (\n\t\t\t<CreateOrImportProject\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\tsetCreateProjectActivated={setCreateProjectActivated}\n\t\t\t\tsetImportProjectActivated={setImportProjectActivated}\n\t\t\t/>\n\t\t)\n\t} else if (props.token !== \"\" && !waitingForToken && !getFileActivated) {\n\t\treturn (\n\t\t\t<SaveOrExportProject\n\t\t\t\thideModal={hideModal}\n\t\t\t\tsetContent={props.setContent}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\tsaveOnClick={saveOnClick}\n\t\t\t\tgetFile={getFile}\n\t\t\t\tloadingSaved={loadingSaved}\n\t\t\t\tresponseSavedStatus={responseSavedStatus}\n\t\t\t\tsaveClicked={saveClicked}\n\t\t\t\tsetToken={props.setToken}\n\t\t\t/>\n\t\t)\n\t} else if (props.token !== \"\" && !waitingForToken && getFileActivated) {\n\t\treturn (\n\t\t\t<DownloadProject\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloadingGetFile={loadingGetFile}\n\t\t\t\ttoken={props.token}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t/>\n\t\t)\n\t} else if (props.token === \"\" && createProjectActivated && !waitingForToken) {\n\t\treturn (\n\t\t\t<InsertRecoveryKey\n\t\t\t\tcheckRecoveryKeyCount={checkRecoveryKeyCount}\n\t\t\t\tcheckRecoveryKeyStatus={checkRecoveryKeyStatus}\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\trecoveryKeyInputValue={recoveryKeyInputValue}\n\t\t\t\trecoveryTooLong={recoveryTooLong}\n\t\t\t\tsetCheckRecoveryKeyCount={setCheckRecoveryKeyCount}\n\t\t\t\tsetRecoveryKeyInputValue={setRecoveryKeyInputValue}\n\t\t\t/>\n\t\t)\n\t} else if (createProjectActivated && waitingForToken) {\n\t\treturn (\n\t\t\t<GiveNewProjectToken\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\tresponseToken={responseToken}\n\t\t\t/>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\t!recoverTokenActivated\n\t) {\n\t\treturn (\n\t\t\t<ImportProject\n\t\t\t\thideModal={hideModal}\n\t\t\t\timportProject={importProject}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\tsetRecoverTokenActivated={setRecoverTokenActivated}\n\t\t\t\tsetTokenInputValue={setTokenInputValue}\n\t\t\t\ttokenInputValue={tokenInputValue}\n\t\t\t/>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\trecoverTokenActivated &&\n\t\t!waitingForTokenFromRecoveryKey\n\t) {\n\t\treturn (\n\t\t\t<InsertRecoveryKeyToGetToken\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\trecoverToken={recoverToken}\n\t\t\t\tsetTokenFromRecoveryKeyInputValue={setTokenFromRecoveryKeyInputValue}\n\t\t\t\ttokenFromRecoveryKeyInputValue={tokenFromRecoveryKeyInputValue}\n\t\t\t/>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\trecoverTokenActivated &&\n\t\twaitingForTokenFromRecoveryKey\n\t) {\n\t\treturn (\n\t\t\t<GiveNewProjectTokenFromRecoveryKey\n\t\t\t\thideModal={hideModal}\n\t\t\t\tloginModalStateActive={props.loginModalStateActive}\n\t\t\t\tresponseTokenFromRecovery={responseTokenFromRecovery}\n\t\t\t/>\n\t\t)\n\t}\n\treturn <>hi </>\n}\n\nexport default ModalLogin\n","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx",["181"],"import React, { useEffect, useState } from \"react\"\n\nexport const StylesToggle = (props: any) => {\n  const [checkbox, setCheckbox] = useState(false)\n\n  const handleCheckbox = (event: any) => {\n    if (event.target.checked) {\n      props.savedStyle[props.propertyToToggle] = props.on\n      setCheckbox(true)\n    } else {\n      props.savedStyle[props.propertyToToggle] = props.off\n      setCheckbox(false)\n    }\n  }\n\n  useEffect(() => {\n    if (props.modalStateActive) {\n      if (props.savedStyle[props.propertyToToggle] === props.on) {\n        setCheckbox(true)\n      } else {\n        setCheckbox(false)\n      }\n    }\n  }, [props.modalStateActive])\n\n  return (\n    <div className=\"stylesBorderContainer\">\n      <label className=\"checkboxContainer\">\n        <input\n          onClick={(e: any) => handleCheckbox(e)}\n          type=\"checkbox\"\n          checked={checkbox}\n          className=\"checkbox\"\n        ></input>\n        <div className=\"checkboxFill\"></div>\n      </label>\n      <span> {props.nameOfStyle} </span>\n    </div>\n  )\n}\n\nexport default StylesToggle\n","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImageSizeTable.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx",["182","183","184","185","186","187","188","189","190","191","192","193"],"/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx",["194"],"import React, {useEffect} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport const TextAlignCheckbox = (props: any) => {\n  const handleClick = () => {\n    props.setSelected(props.type);\n    props.savedStyle.textAlign = props.type;\n  };\n\n  useEffect(() => {\n    props.setSelected(props.savedStyle.textAlign);\n  }, [props.modalStateActive]);\n\n  return (\n    <label className=\"checkboxContainer\" onClick={handleClick}>\n      <input\n        type=\"checkbox\"\n        className=\"checkbox\"\n        checked={props.selected === props.type ? true : false}\n      />\n      <FontAwesomeIcon className=\"textAlignIcon\" icon={props.icon} />\n    </label>\n  );\n};\n\nexport default TextAlignCheckbox;\n","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/CreateOrImportProject.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/SaveOrExportProject.tsx",["195"],"import React from \"react\"\nimport { setTokenSourceMapRange } from \"typescript\"\nimport { textStyle } from \"../../constants/exceptionItems\"\n\ninterface Props {\n\thideModal: () => void\n\tloginModalStateActive: boolean\n\tsaveOnClick: () => void\n\tresponseSavedStatus: number\n\tloadingSaved: boolean\n\tsaveClicked: boolean\n\tgetFile: () => void\n\tsetToken: (token: string) => void\n\tsetContent: (content: []) => void\n}\nconst SaveOrExportProject: React.FC<Props> = ({\n\tsetContent,\n\tsetToken,\n\tloginModalStateActive,\n\thideModal,\n\tgetFile,\n\tsaveClicked,\n\tloadingSaved,\n\tresponseSavedStatus,\n\tsaveOnClick,\n}) => {\n\tconst logOut = () => {\n\t\tsetToken(\"\")\n\t\tlocalStorage.removeItem(\"web-maker-token\")\n\t\thideModal()\n\t\tsetContent([])\n\t}\n\n\treturn (\n\t\t<div className=\"loginModalContainer\">\n\t\t\t<div\n\t\t\t\tclassName={`overlay ${loginModalStateActive ? \"overlayActive\" : \"\"}`}\n\t\t\t\tonClick={hideModal}></div>\n\t\t\t<div\n\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\tloginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t}`}>\n\t\t\t\t<span style={textStyle}> Save your current project </span>\n\t\t\t\t<button\n\t\t\t\t\tonClick={saveOnClick}\n\t\t\t\t\tclassName=\"defaultButton\">\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t\t<span\n\t\t\t\t\tclassName={`informationDiv ${\n\t\t\t\t\t\tresponseSavedStatus === 200 && !loadingSaved && saveClicked\n\t\t\t\t\t\t\t? \"unhide\"\n\t\t\t\t\t\t\t: \"hide\"\n\t\t\t\t\t}`}>\n\t\t\t\t\tSaved successfully\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={`alertDiv ${\n\t\t\t\t\t\tresponseSavedStatus === 500 && !loadingSaved && saveClicked\n\t\t\t\t\t\t\t? \"unhide\"\n\t\t\t\t\t\t\t: \"hide\"\n\t\t\t\t\t}`}>\n\t\t\t\t\tUnsuccessfull save, please try again later\n\t\t\t\t</span>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={getFile}\n\t\t\t\t\tclassName=\"defaultButton\">\n\t\t\t\t\tGet html file\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={logOut}\n\t\t\t\t\tclassName=\"defaultButton\">\n\t\t\t\t\tLog out\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SaveOrExportProject\n","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/DownloadProject.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/InsertRecoveryKey.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/GiveNewProjectToken.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/ImportProject.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/InsertRecoveryKeyToGetToken.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLoginComponents/GiveNewProjectTokenFromRecoveryKey.tsx",["196"],"import React from \"react\"\nimport { textStyle } from \"../../constants/exceptionItems\"\n\ninterface Props {\n\tloginModalStateActive: boolean\n\thideModal: () => void\n\tresponseTokenFromRecovery: number | null\n}\nconst GiveNewProjectTokenFromRecoveryKey: React.FC<Props> = ({\n\tloginModalStateActive,\n\thideModal,\n\tresponseTokenFromRecovery,\n}) => {\n\treturn (\n\t\t<div className=\"loginModalContainer\">\n\t\t\t<div\n\t\t\t\tclassName={`overlay ${loginModalStateActive ? \"overlayActive\" : \"\"}`}\n\t\t\t\tonClick={hideModal}></div>\n\t\t\t<div\n\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\tloginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t}`}>\n\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t<span>\n\t\t\t\t\t{responseTokenFromRecovery !== null\n\t\t\t\t\t\t? responseTokenFromRecovery == 500\n\t\t\t\t\t\t\t? \"Wrong recovery key\"\n\t\t\t\t\t\t\t: responseTokenFromRecovery\n\t\t\t\t\t\t: \"\"}\n\t\t\t\t</span>\n\t\t\t\t<div className=\"informationDiv\">\n\t\t\t\t\tMake sure you save this token. You will need the key to edit you\n\t\t\t\t\tproject the next time you want to edit it.\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t\tclassName=\"defaultInput\">\n\t\t\t\t\tContinue\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GiveNewProjectTokenFromRecoveryKey\n","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddButton.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddItem.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddImage.tsx",["197"],"import React, { useEffect } from \"react\"\nimport { image } from \"../constants/defaultTypes\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst AddImage = (props: any) => {\n\tconst addImage = () => {\n\t\tprops.setAddImageOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyImageCount === 0) {\n\t\t\treturn\n\t\t}\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, image)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\titemCopy.src = props.src\n\t\titemCopy.style = {\n\t\t\twidth: props.imageSizes.width + props.imageSizes.magnitude,\n\t\t\theight: props.imageSizes.width + props.imageSizes.magnitude,\n\t\t\tmargin: \"1%\",\n\t\t}\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyImageCount])\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addImage} className=\"dropdown\">\n\t\t\t\t<FontAwesomeIcon size={\"2x\"} icon={props.icon} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddImage\n","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddTable.tsx",["198"],"import React, { useEffect } from \"react\"\nimport { table } from \"../constants/defaultTypes\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst AddTable = (props: any) => {\n\tconst addTable = () => {\n\t\tprops.setAddTableOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyTableCount === 0) {\n\t\t\treturn\n\t\t}\n\t\tvar itemCopy = JSON.parse(JSON.stringify(table)) //You cant use Object.assign because its not a deep copy\n\n\t\tfor (let i = 0; i < props.tableSizes.height; i++) {\n\t\t\titemCopy.children.push({\n\t\t\t\ttype: \"tr\",\n\t\t\t\ttext: \"Tr\",\n\t\t\t\tstyle: {\n\t\t\t\t\t// margin: \"1%\",\n\t\t\t\t\tborder: \"1px solid\",\n\t\t\t\t},\n\t\t\t\tchildren: [],\n\t\t\t})\n\n\t\t\tfor (let n = 0; n < props.tableSizes.width; n++) {\n\t\t\t\titemCopy.children[i].children.push({\n\t\t\t\t\ttype: \"td\",\n\t\t\t\t\ttext: \"Td\",\n\t\t\t\t\tcontent: \"\",\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: `${100 / props.tableSizes.width - 1}`,\n\t\t\t\t\t\t// display: \"block\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t// margin: \"1%\",\n\t\t\t\t\t\tborder: \"1px solid\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t// itemCopy.style.width = props.imageSizes.width + props.imageSizes.magnitude\n\t\t// itemCopy.style.height = props.imageSizes.height + props.imageSizes.magnitude\n\t\tprops.content.push(itemCopy)\n\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyTableCount])\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addTable} className=\"dropdown\">\n\t\t\t\t<FontAwesomeIcon size={\"2x\"} icon={props.icon} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddTable\n","/home/a/Documents/GitHub/web-maker/web-maker/src/AddComponents/AddTextCollumn.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/Settings.tsx",["199","200"],"import React, { useState } from \"react\"\nimport { bodyObjectType } from \"../constants/defaultTypes\"\nimport SettingsButton from \"./SettingsButton\"\nimport SettingsModal from \"./SettingsModal\"\nimport ToggleDarkMode from \"./ToggleDarkMode\"\n\ninterface Props {\n\tpreviewMode: boolean\n\tcontent: any[] // Had to use because objecdt[] | bodyContentType[] doesnt work\n\teditCount: number\n\tsetEditCount: (editCount: number) => void\n\tsetDarkModeActive: (darkMode: boolean) => void\n\tdarkModeActive: boolean\n}\n\nconst Settings: React.FC<Props> = ({\n\tsetEditCount,\n\teditCount,\n\tcontent,\n\tpreviewMode,\n\tsetDarkModeActive,\n\tdarkModeActive\n}) => {\n\tconst [settingsModalActive, setSettingsModalActive] = useState(false)\n\n\treturn (\n\t\t<div>\n\t\t\t<SettingsButton\n\t\t\t\tsetSettingsModalActive={setSettingsModalActive}\n\t\t\t\tpreviewMode={previewMode}\n\t\t\t/>\n\t\t\t<SettingsModal\n\t\t\t\tsetEditCount={setEditCount}\n\t\t\t\teditCount={editCount}\n\t\t\t\tcontent={content}\n\t\t\t\tcontentBody={content[0]}\n\t\t\t\tsetSettingsModalActive={setSettingsModalActive}\n\t\t\t\tsettingsModalActive={settingsModalActive}\n\t\t\t\tsetDarkModeActive={setDarkModeActive}\n\t\t\t\tdarkModeActive={darkModeActive}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Settings\n","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsButton.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsModal.tsx",["201"],"import React, { useState } from \"react\"\nimport { bodyObject, bodyObjectType } from \"../constants/defaultTypes\"\nimport SettingsStylesModal from \"./SettingsStylesModal\"\nimport ToggleDarkMode from \"./ToggleDarkMode\"\n\ninterface Props {\n\tsetSettingsModalActive: (settingsStatus: boolean) => void\n\tsettingsModalActive: boolean\n\tcontentBody: bodyObjectType\n\tcontent: object[] // I separte them so I am able to asing types to only content[0]\n\teditCount: number\n\tsetEditCount: (editCount: number) => void\n\tsetDarkModeActive: (darkMode: boolean) => void\n\tdarkModeActive: boolean\n}\n\nconst SettingsModal: React.FC<Props> = ({\n\tcontent,\n\tcontentBody,\n\tsetSettingsModalActive,\n\tsettingsModalActive,\n\teditCount,\n\tsetDarkModeActive,\n\tdarkModeActive,\n\tsetEditCount,\n}) => {\n\tconst [newTitleValue, setNewTitleValue] = useState(\"\")\n\tconst [newObject, setNewObject] = useState(contentBody)\n\tconst [settingsStyleActive, setSettingsStyleActive] = useState(false)\n\n\tconst applySettings = () => {\n\t\tfor (let [style, value] of Object.entries(newObject)) {\n\t\t\tif (value === \"\" || value === null || value === undefined) {\n\t\t\t\tvalue = bodyObject[value] // This may not work and you have to do newObject[style] instead of bodyObject\n\t\t\t}\n\t\t}\n\t\tif (contentBody !== undefined && contentBody !== null) {\n\t\t\tcontent.splice(0, 1, newObject)\n\t\t\tdebugger\n\t\t}\n\t\thideModal()\n\t\tsetEditCount(editCount + 1)\n\t}\n\n\tconst hideModal = () => {\n\t\tsetSettingsStyleActive(false)\n\t\tsetSettingsModalActive(false)\n\t}\n\n\tif (settingsStyleActive) {\n\t\treturn (\n\t\t\t<SettingsStylesModal\n\t\t\t\thideModal={hideModal}\n\t\t\t\tsetNewObject={setNewObject}\n\t\t\t\tnewObject={newObject}\n\t\t\t\tsetSettingsStyleActive={setSettingsStyleActive}\n\t\t\t\tsettingsStyleActive={settingsStyleActive}\n\t\t\t/>\n\t\t)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`modal settingsModal ${settingsModalActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}>\n\t\t\t\t<h2> Settings  <ToggleDarkMode setDarkModeActive={setDarkModeActive} darkModeActive={darkModeActive} /> </h2>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"defaultInput\"\n\t\t\t\t\tstyle={{ display: \"inline-block\" }}\n\t\t\t\t\tplaceholder=\"Your webpage title\"\n\t\t\t\t\tvalue={newTitleValue}\n\t\t\t\t\tonChange={(e: any) => setNewTitleValue(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"settingsButtonContainer\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"defaultButton settingsButtons\"\n\t\t\t\t\t\tonClick={() => setSettingsStyleActive(true)}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tStyle{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"defaultButton settingsButtons\"\n\t\t\t\t\t\tonClick={applySettings}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tApply{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={`overlay editOverlay ${settingsModalActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\tonClick={() => setSettingsModalActive(false)}></div>\n\t\t</>\n\t)\n}\n\nexport default SettingsModal\n","/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/SettingsStylesModal.tsx",["202"],"import React, { useState } from \"react\"\nimport { bodyObjectType } from \"../constants/defaultTypes\"\n\ninterface Props {\n\tsettingsStyleActive: boolean\n\tsetSettingsStyleActive: (value: boolean) => void\n\tnewObject: bodyObjectType\n\tsetNewObject: (newBodyObject: bodyObjectType) => void\n\thideModal: () => void\n}\n\nconst SettingsStylesModal: React.FC<Props> = ({\n\thideModal,\n\tnewObject,\n\tsetNewObject,\n\tsettingsStyleActive,\n\tsetSettingsStyleActive,\n}) => {\n\tconst udpateStyles = (newStyleObject: object) => {\n\t\tvar itemCopy: bodyObjectType = JSON.parse(JSON.stringify(newObject))\n\t\tObject.assign(itemCopy, newStyleObject)\n\t\tsetNewObject(itemCopy)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`modal settingsModal ${\n\t\t\t\t\tsettingsStyleActive ? \"modalActive\" : \"\"\n\t\t\t\t}`}>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"settingsStylesPairsContainer\">\n\t\t\t\t\t\t<span> Font size </span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tclassName=\"defaultInput settingsStyleInput\"\n\t\t\t\t\t\t\tplaceholder={newObject.style.fontSize}\n\t\t\t\t\t\t\tonChange={(e: any) =>\n\t\t\t\t\t\t\t\tudpateStyles({ style: { fontSize: e.target.value + \"%\" } })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t%\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"settingsStylesPairsContainer\">\n\t\t\t\t\t\t<span> Text color </span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"defaultInput settingsStyleInput\"\n\t\t\t\t\t\t\tplaceholder={newObject.style.color}\n\t\t\t\t\t\t\tonChange={(e: any) =>\n\t\t\t\t\t\t\t\tudpateStyles({ style: { color: e.target.value } })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"settingsStylesPairsContainer\">\n\t\t\t\t\t\t<span> Text Align </span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"defaultInput settingsStyleInput\"\n\t\t\t\t\t\t\tplaceholder={newObject.style.textAlign}\n\t\t\t\t\t\t\tonChange={(e: any) =>\n\t\t\t\t\t\t\t\tudpateStyles({ style: { textAlign: e.target.value } })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"settingsStylesPairsContainer\">\n\t\t\t\t\t\t<span> Background color </span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"defaultInput settingsStyleInput\"\n\t\t\t\t\t\t\tplaceholder={newObject.style.background}\n\t\t\t\t\t\t\tonChange={(e: any) =>\n\t\t\t\t\t\t\t\tudpateStyles({ style: { background: e.target.value } })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSettingsStyleActive(false)}\n\t\t\t\t\tclassName=\"defaultButton\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tApply{\" \"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={`overlay editOverlay ${\n\t\t\t\t\tsettingsStyleActive ? \"overlayActive\" : \"\"\n\t\t\t\t}`}\n\t\t\t\tonClick={hideModal}></div>\n\t\t</>\n\t)\n}\n\nexport default SettingsStylesModal\n","/home/a/Documents/GitHub/web-maker/web-maker/src/constants/defaultTypes.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/constants/exceptionItems.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/SettingsComponents/ToggleDarkMode.tsx",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":35,"column":40,"nodeType":"209","messageId":"210","endLine":35,"endColumn":42},{"ruleId":"211","severity":1,"message":"212","line":25,"column":5,"nodeType":"213","endLine":25,"endColumn":18,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":19},{"ruleId":"211","severity":1,"message":"219","line":83,"column":5,"nodeType":"213","endLine":83,"endColumn":22,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"221","line":89,"column":5,"nodeType":"213","endLine":89,"endColumn":54,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"223","line":99,"column":5,"nodeType":"213","endLine":99,"endColumn":20,"suggestions":"224"},{"ruleId":"207","severity":1,"message":"225","line":102,"column":44,"nodeType":"209","messageId":"210","endLine":102,"endColumn":46},{"ruleId":"211","severity":1,"message":"219","line":106,"column":5,"nodeType":"213","endLine":106,"endColumn":40,"suggestions":"226"},{"ruleId":"207","severity":1,"message":"225","line":135,"column":18,"nodeType":"209","messageId":"210","endLine":135,"endColumn":20},{"ruleId":"211","severity":1,"message":"227","line":24,"column":5,"nodeType":"213","endLine":24,"endColumn":29,"suggestions":"228"},{"ruleId":"215","severity":1,"message":"229","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"230","line":41,"column":6,"nodeType":"213","endLine":41,"endColumn":17,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"232","line":78,"column":6,"nodeType":"213","endLine":78,"endColumn":19,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"234","line":110,"column":6,"nodeType":"213","endLine":110,"endColumn":13,"suggestions":"235"},{"ruleId":"211","severity":1,"message":"232","line":151,"column":6,"nodeType":"213","endLine":151,"endColumn":21,"suggestions":"236"},{"ruleId":"207","severity":1,"message":"225","line":160,"column":38,"nodeType":"209","messageId":"210","endLine":160,"endColumn":40},{"ruleId":"211","severity":1,"message":"237","line":186,"column":6,"nodeType":"213","endLine":186,"endColumn":23,"suggestions":"238"},{"ruleId":"207","severity":1,"message":"225","line":201,"column":13,"nodeType":"209","messageId":"210","endLine":201,"endColumn":15},{"ruleId":"215","severity":1,"message":"239","line":221,"column":13,"nodeType":"217","messageId":"218","endLine":221,"endColumn":25},{"ruleId":"211","severity":1,"message":"237","line":228,"column":6,"nodeType":"213","endLine":228,"endColumn":20,"suggestions":"240"},{"ruleId":"211","severity":1,"message":"237","line":266,"column":6,"nodeType":"213","endLine":266,"endColumn":23,"suggestions":"241"},{"ruleId":"211","severity":1,"message":"242","line":310,"column":6,"nodeType":"213","endLine":310,"endColumn":29,"suggestions":"243"},{"ruleId":"211","severity":1,"message":"219","line":12,"column":6,"nodeType":"213","endLine":12,"endColumn":30,"suggestions":"244"},{"ruleId":"215","severity":1,"message":"245","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":32},{"ruleId":"207","severity":1,"message":"208","line":26,"column":35,"nodeType":"209","messageId":"210","endLine":26,"endColumn":37},{"ruleId":"211","severity":1,"message":"219","line":26,"column":5,"nodeType":"213","endLine":26,"endColumn":28,"suggestions":"246"},{"ruleId":"211","severity":1,"message":"219","line":48,"column":5,"nodeType":"213","endLine":48,"endColumn":28,"suggestions":"247"},{"ruleId":"215","severity":1,"message":"248","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":24},{"ruleId":"215","severity":1,"message":"249","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":22},{"ruleId":"215","severity":1,"message":"250","line":32,"column":13,"nodeType":"217","messageId":"218","endLine":32,"endColumn":18},{"ruleId":"215","severity":1,"message":"251","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancelHover', 'increaseHoldIndex', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["254"],"@typescript-eslint/no-unused-vars","'textStyle' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["255"],"React Hook useEffect has a missing dependency: 'createProject'. Either include it or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'loadingResponseToken'. Either include it or remove the dependency array.",["257"],"Expected '!==' and instead saw '!='.",["258"],"React Hook useEffect has missing dependencies: 'props.on', 'props.propertyToToggle', and 'props.savedStyle'. Either include them or remove the dependency array.",["259"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'content', 'thisURL', and 'token'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'recoverykey' and 'thisURL'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'content' and 'thisURL'. Either include them or remove the dependency array.",["262"],["263"],"React Hook useEffect has missing dependencies: 'thisURL' and 'token'. Either include them or remove the dependency array.",["264"],"'data' is assigned a value but never used.",["265"],["266"],"React Hook useEffect has missing dependencies: 'recoveryKey' and 'thisURL'. Either include them or remove the dependency array.",["267"],["268"],"'setTokenSourceMapRange' is defined but never used.",["269"],["270"],"'bodyObjectType' is defined but never used.","'ToggleDarkMode' is defined but never used.","'style' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [cancelHover, holdCounter, increaseHoldIndex, props]",{"range":"305","text":"306"},"Update the dependencies array to be: [props, responseContent]",{"range":"307","text":"308"},"Update the dependencies array to be: [checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",{"range":"309","text":"310"},"Update the dependencies array to be: [loadingResponseToken, responseToken]",{"range":"311","text":"312"},"Update the dependencies array to be: [tokenToSet, props.loginModalState, props]",{"range":"313","text":"314"},"Update the dependencies array to be: [props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",{"range":"315","text":"316"},"Update the dependencies array to be: [content, sentCount, thisURL, token]",{"range":"317","text":"318"},"Update the dependencies array to be: [createCount, recoverykey, thisURL]",{"range":"319","text":"320"},"Update the dependencies array to be: [content, thisURL, token]",{"range":"321","text":"322"},"Update the dependencies array to be: [recoveryCount, recoverykey, thisURL]",{"range":"323","text":"324"},"Update the dependencies array to be: [getContentCount, thisURL, token]",{"range":"325","text":"326"},"Update the dependencies array to be: [getFileCount, thisURL, token]",{"range":"327","text":"328"},"Update the dependencies array to be: [removeFileCount, thisURL, token]",{"range":"329","text":"330"},"Update the dependencies array to be: [checkRecoveryKeyCount, recoveryKey, thisURL]",{"range":"331","text":"332"},"Update the dependencies array to be: [props, props.modalStateActive]",{"range":"333","text":"334"},"Update the dependencies array to be: [props, props.applyImageCount]",{"range":"335","text":"336"},"Update the dependencies array to be: [props, props.applyTableCount]",{"range":"337","text":"338"},[689,702],"[cancelHover, holdCounter, increaseHoldIndex, props]",[3214,3231],"[props, responseContent]",[3348,3397],"[checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",[3553,3568],"[loadingResponseToken, responseToken]",[3735,3770],"[tokenToSet, props.loginModalState, props]",[578,602],"[props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",[1116,1127],"[content, sentCount, thisURL, token]",[2189,2202],"[createCount, recoverykey, thisURL]",[3181,3188],"[content, thisURL, token]",[4286,4301],"[recoveryCount, recoverykey, thisURL]",[5349,5366],"[getContentCount, thisURL, token]",[6484,6498],"[getFileCount, thisURL, token]",[7553,7570],"[removeFileCount, thisURL, token]",[8771,8794],"[checkRecoveryKeyCount, recoveryKey, thisURL]",[348,372],"[props, props.modalStateActive]",[720,743],"[props, props.applyImageCount]",[1247,1270],"[props, props.applyTableCount]"]