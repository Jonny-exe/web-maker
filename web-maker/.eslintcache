[{"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx":"1","/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts":"2","/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx":"3","/home/a/Documents/GitHub/web-maker/web-maker/src/AddButton.tsx":"4","/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx":"5","/home/a/Documents/GitHub/web-maker/web-maker/src/Edit.tsx":"6","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx":"7","/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx":"8","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx":"9","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx":"10","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx":"11","/home/a/Documents/GitHub/web-maker/web-maker/src/AddItem.tsx":"12","/home/a/Documents/GitHub/web-maker/web-maker/src/AddImage.tsx":"13","/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx":"14","/home/a/Documents/GitHub/web-maker/web-maker/src/defaultTypes.js":"15","/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx":"16","/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx":"17","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTable.tsx":"18","/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx":"19","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTextCollumn.tsx":"20","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImage.tsx":"21","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalTable.tsx":"22","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImageSizeTable.tsx":"23","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLogin.tsx":"24","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/Modal.tsx":"25","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalEditPlacement.tsx":"26","/home/a/Documents/GitHub/web-maker/web-maker/src/exceptionItems.js":"27"},{"size":489,"mtime":1609711987146,"results":"28","hashOfConfig":"29"},{"size":421,"mtime":1609711480140,"results":"30","hashOfConfig":"29"},{"size":2885,"mtime":1609711479572,"results":"31","hashOfConfig":"29"},{"size":2515,"mtime":1609711920246,"results":"32","hashOfConfig":"29"},{"size":487,"mtime":1609711987062,"results":"33","hashOfConfig":"29"},{"size":367,"mtime":1609325448503,"results":"34","hashOfConfig":"29"},{"size":2489,"mtime":1609711987086,"results":"35","hashOfConfig":"29"},{"size":2492,"mtime":1609711986798,"results":"36","hashOfConfig":"29"},{"size":1222,"mtime":1609711987114,"results":"37","hashOfConfig":"29"},{"size":1018,"mtime":1609711987134,"results":"38","hashOfConfig":"29"},{"size":1431,"mtime":1609711987102,"results":"39","hashOfConfig":"29"},{"size":664,"mtime":1609711920290,"results":"40","hashOfConfig":"29"},{"size":923,"mtime":1609711920270,"results":"41","hashOfConfig":"29"},{"size":715,"mtime":1609711480012,"results":"42","hashOfConfig":"29"},{"size":1950,"mtime":1609711480040,"results":"43","hashOfConfig":"29"},{"size":756,"mtime":1609711986834,"results":"44","hashOfConfig":"29"},{"size":7968,"mtime":1609711987202,"results":"45","hashOfConfig":"29"},{"size":1586,"mtime":1609711993474,"results":"46","hashOfConfig":"29"},{"size":598,"mtime":1609711656217,"results":"47","hashOfConfig":"29"},{"size":557,"mtime":1609711986750,"results":"48","hashOfConfig":"29"},{"size":1433,"mtime":1609711986922,"results":"49","hashOfConfig":"29"},{"size":1173,"mtime":1609711987046,"results":"50","hashOfConfig":"29"},{"size":1163,"mtime":1609711986946,"results":"51","hashOfConfig":"29"},{"size":13188,"mtime":1609711987026,"results":"52","hashOfConfig":"29"},{"size":851,"mtime":1609711986850,"results":"53","hashOfConfig":"29"},{"size":2147,"mtime":1609711986886,"results":"54","hashOfConfig":"29"},{"size":125,"mtime":1609711480052,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l7xcaf",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts",[],["120","121"],"/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddButton.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Edit.tsx",["122"],"import React, { useState } from 'react'\n\nexport const Edit = (props: any) => {\n\n\treturn (\n\t\t<div className=\"preview\">\n\t\t\t<button onClick={() => {\n\t\t\t\tprops.setModalStateActive(true)\n\t\t\t}} className={`preview ${props.previewMode ? \"previewMode\" : \"\"} ${props.displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`}> Edit </button>\n\t\t</div>\n\t)\n}\n\nexport default Edit",["123","124"],"/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx",["125","126","127"],"import React, { useEffect, useState } from \"react\"\nimport { notEditable } from \"./exceptionItems\"\nimport RenderContent1 from \"./RenderContent1\"\n\nexport const RenderContent = (props: any) => {\n\tconst [holdCounter, setHoldCounter] = useState(-1)\n\tconst [cancelHover, setCancelHover] = useState(false)\n\tuseEffect(() => {\n\t\tif (props.itemIndex !== -1 && holdCounter !== -1) {\n\t\t\tif (!cancelHover) {\n\t\t\t\tif (holdCounter < 4) {\n\t\t\t\t\tvar timer = setTimeout(increaseHoldIndex, 75)\n\t\t\t\t} else {\n\t\t\t\t\tsetHoldCounter(-1)\n\t\t\t\t\tprops.setModalEditPlacementActive(true)\n\t\t\t\t\tsetCancelHover(true)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetHoldCounter(-1)\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t}, [holdCounter])\n\n\tconst increaseHoldIndex = () => {\n\t\tsetHoldCounter(holdCounter + 1)\n\t}\n\n\tconsole.log(\n\t\tprops.content[0] != undefined ? props.content[0].type === \"img\" : \"empty\",\n\t)\n\treturn (\n\t\t<>\n\t\t\t{props.content.map((x: any, i: number) =>\n\t\t\t\tx.type === \"img\" ? (\n\t\t\t\t\t<img src={x.src} style={x.style} alt=\"Image\" />\n\t\t\t\t) : (\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\tx.type,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: x.style,\n\t\t\t\t\t\t\tcontentEditable:\n\t\t\t\t\t\t\t\tnotEditable.includes(x.type) || props.previewMode\n\t\t\t\t\t\t\t\t\t? \"false\"\n\t\t\t\t\t\t\t\t\t: \"true\", // this is has to be like this because if not it doesnt detect the td only the table\n\t\t\t\t\t\t\tkey: i,\n\t\t\t\t\t\t\tplaceholder:\n\t\t\t\t\t\t\t\t(notEditable.includes(x.type) && x.type !== \"div\") ||\n\t\t\t\t\t\t\t\t!props.previewMode\n\t\t\t\t\t\t\t\t\t? x.text\n\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\tcontent: \"\",\n\t\t\t\t\t\t\tonInput: (e: any) => {\n\t\t\t\t\t\t\t\tx.content = e.target.textContent\n\t\t\t\t\t\t\t\tconsole.log(\"ONINPUT\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonMouseDown: (e: any) => {\n\t\t\t\t\t\t\t\tif (props.setItemIndex !== undefined) {\n\t\t\t\t\t\t\t\t\tprops.setItemIndex(i)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tincreaseHoldIndex()\n\t\t\t\t\t\t\t\tsetCancelHover(false)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonMouseUp: (e: any) => {\n\t\t\t\t\t\t\t\tsetHoldCounter(-1)\n\t\t\t\t\t\t\t\tsetCancelHover(true)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx.children !== null &&\n\t\t\t\t\t\t\tx.children !== undefined &&\n\t\t\t\t\t\t\tx.children.length !== 0 ? (\n\t\t\t\t\t\t\t<RenderContent1\n\t\t\t\t\t\t\t\tcontent={x.children}\n\t\t\t\t\t\t\t\tsetModalEditPlacementActive={props.setModalEditPlacementActive}\n\t\t\t\t\t\t\t\tpreviewMode={props.previewMode}\n\t\t\t\t\t\t\t\tsetSavedStyle={props.setSavedStyle}\n\t\t\t\t\t\t\t\tsetItemIndex={props.setItemIndex}\n\t\t\t\t\t\t\t\titemIndex={props.itemIndex}\n\t\t\t\t\t\t\t\tsavedStyle={props.savedStyle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tx.content\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default RenderContent\n","/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx",["128"],"import React, { useEffect, useState } from 'react'\n\nexport const StylesToggle = (props: any) => {\n\tconst [checkbox, setCheckbox] = useState(false)\n\n\tconst handleCheckbox = (event: any) => {\n\t\tif (event.target.checked) {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.on\n\t\t\tsetCheckbox(true)\n\t\t} else {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.off\n\t\t\tsetCheckbox(false)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.modalStateActive) {\n\t\t\tif (props.savedStyle[props.propertyToToggle] === props.on) {\n\t\t\t\tsetCheckbox(true)\n\t\t\t} else {\n\t\t\t\tsetCheckbox(false)\n\t\t\t}\n\t\t}\n\t}, [props.modalStateActive])\n\n\treturn (\n\t\t<div className=\"stylesBorderContainer\">\n\t\t\t<label className=\"checkboxContainer\">\n\t\t\t\t<input onClick={(e: any) => handleCheckbox(e)} onChange={() => console.log(\"toggled\")} type=\"checkbox\" checked={checkbox} className=\"checkbox\" ></input>\n\t\t\t\t<div className=\"checkboxFill\"></div>\n\t\t\t</label>\n\t\t\t<span> {props.nameOfStyle} </span>\n\t\t</div>\n\t)\n}\n\nexport default StylesToggle","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddItem.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddImage.tsx",["129"],"import React, { useEffect } from \"react\"\nimport { image } from \"./defaultTypes.js\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst AddImage = (props: any) => {\n\tconst addImage = () => {\n\t\tprops.setAddImageOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyImageCount === 0) {\n\t\t\treturn\n\t\t}\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, image)\n\t\tconsole.log(props)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\titemCopy.src = props.src\n\t\titemCopy.style = {\n\t\t\twidth: props.imageSizes.width + props.imageSizes.magnitude,\n\t\t\theight: props.imageSizes.width + props.imageSizes.magnitude,\n\t\t\tmargin: \"1%\",\n\t\t}\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyImageCount])\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addImage} className=\"dropdown\">\n\t\t\t\t<FontAwesomeIcon size={\"2x\"} icon={props.icon} />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddImage\n","/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx",["130"],"import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const TextAlignCheckbox = (props: any) => {\n  const handleClick = () => {\n    props.setSelected(props.type);\n    props.savedStyle.textAlign = props.type;\n  };\n\n  useEffect(() => {\n    props.setSelected(props.savedStyle.textAlign);\n  }, [props.modalStateActive]);\n\n  return (\n    <label className=\"checkboxContainer\" onClick={handleClick}>\n      <input\n        type=\"checkbox\"\n        className=\"checkbox\"\n        checked={props.selected === props.type ? true : false}\n      />\n      <FontAwesomeIcon className=\"textAlignIcon\" icon={props.icon} />\n    </label>\n  );\n};\n\nexport default TextAlignCheckbox;\n","/home/a/Documents/GitHub/web-maker/web-maker/src/defaultTypes.js",[],["131","132"],"/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx",["133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from 'react'\n\nconst url = process.env.REACT_APP_REQUEST_URL\nconst headersContent = {}\nconsole.log(process.env)\n\nexport const SaveProject = (sentCount: number, token: string, content: object) => {\n\tconst [state, setState] = useState({ responseSavedStatus: 0, loadingSaved: true })\n\tconst thisURL = url + \"updateTokenObject\"\n\tuseEffect(() => {\n\t\tif (sentCount !== 0) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token,\n\t\t\t\tobject: content\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseSavedStatus: state.responseSavedStatus, loadingSaved: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ responseSavedStatus: data, loadingSaved: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseSavedStatus: 0, loadingSaved: false })\n\t\t}\n\t}, [sentCount])\n\treturn state\n}\n\nexport const CreateProjectTokenRecovery = (recoverykey: string, createCount: number) => {\n\tconst [state, setState] = useState({ responseToken: \"\", loadingResponseToken: true })\n\tconst thisURL = url + \"insertTokenRecovery\"\n\tuseEffect(() => {\n\t\tconsole.log(createCount)\n\t\tif (createCount > 0 && createCount !== null && createCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseToken: state.responseToken, loadingResponseToken: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseToken: data, loadingResponseToken: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseToken: \"\", loadingResponseToken: false })\n\t\t}\n\t}, [createCount])\n\treturn state\n}\n\nexport const CreateProjectTokenObject = (content: any, token: string) => {\n\tconst [state, setState] = useState({ responseStatus: \"\", loading: true })\n\tconst thisURL = url + \"insertTokenObject\"\n\tuseEffect(() => {\n\t\tif (token !== \"\" && token !== null && token !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\tcontent: content,\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseStatus: state.responseStatus, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseStatus: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseStatus: \"\", loading: false })\n\t\t}\n\t}, [token])\n\treturn state\n}\n\nexport const GetTokenFromRecovery = (recoverykey: string, recoveryCount: number) => {\n\tconst [state, setState] = useState({ responseTokenFromRecovery: null, loading: true })\n\tconst thisURL = url + \"getTokenFromRecovery\"\n\tuseEffect(() => {\n\t\tif (recoveryCount > 0 && recoveryCount !== null && recoveryCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseTokenFromRecovery: state.responseTokenFromRecovery, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: any = await response.json()\n\t\t\t\tsetState({ responseTokenFromRecovery: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseTokenFromRecovery: null, loading: false })\n\t\t}\n\t}, [recoveryCount])\n\treturn state\n}\n\n\nexport const GetContentFromToken = (token: string, getContentCount: number) => {\n\tconst [state, setState] = useState({ responseContent: [], loading: true })\n\tconst thisURL = url + \"getObjectFromToken\"\n\tuseEffect(() => {\n\t\tif (getContentCount > 0 && getContentCount !== null && getContentCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseContent: state.responseContent, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: [] = await response.json()\n\t\t\t\tsetState({ responseContent: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseContent: [], loading: false })\n\t\t}\n\t}, [getContentCount])\n\treturn state\n}\n\nexport const GetFile = (token: string, getFileCount: number) => {\n\tconst [state, setState] = useState({ getFileStatus: 0, loadingGetFile: true })\n\tconst thisURL = url + \"exportIntoHTML\"\n\tuseEffect(() => {\n\t\tif (getFileCount > 0 && getFileCount !== null && getFileCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ getFileStatus: state.getFileStatus, loadingGetFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ getFileStatus: data, loadingGetFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ getFileStatus: 500, loadingGetFile: false })\n\t\t}\n\t}, [getFileCount])\n\treturn state\n}\n\nexport const RemoveFile = (token: string, removeFileCount: number) => {\n\tconst [state, setState] = useState({ removeFileStatus: 0, loadingRemoveFile: true })\n\tconst thisURL = url + \"removeFile\"\n\tuseEffect(() => {\n\t\tif (removeFileCount > 0 && removeFileCount !== null && removeFileCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ removeFileStatus: state.removeFileStatus, loadingRemoveFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ removeFileStatus: data, loadingRemoveFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ removeFileStatus: 500, loadingRemoveFile: false })\n\t\t}\n\t}, [removeFileCount])\n\treturn state\n}\n\n\nexport const CheckRecoveryKey = (recoveryKey: string, checkRecoveryKeyCount: number) => {\n\tconst [state, setState] = useState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: true })\n\tconst thisURL = url + \"doesRecoveryKeyExist\"\n\tuseEffect(() => {\n\t\tif (checkRecoveryKeyCount > 0 && checkRecoveryKeyCount !== null && checkRecoveryKeyCount !== undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoveryKey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ checkRecoveryKeyStatus: state.checkRecoveryKeyStatus, loadingCheckRecoveryKey: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ checkRecoveryKeyStatus: data, loadingCheckRecoveryKey: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: false })\n\t\t}\n\t}, [checkRecoveryKeyCount])\n\treturn state\n}\n","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTable.tsx",["142"],"/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddTextCollumn.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImage.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalTable.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalImageSizeTable.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalLogin.tsx",["143","144","145","146","147"],"import React, { useEffect, useState } from \"react\"\nimport {\n\tSaveProject,\n\tCreateProjectTokenRecovery,\n\tCreateProjectTokenObject,\n\tGetTokenFromRecovery,\n\tGetContentFromToken,\n\tGetFile,\n\tRemoveFile,\n\tCheckRecoveryKey,\n} from \"../requests\"\n\nconst ModalLogin = (props: any) => {\n\tconst textStyle = { fontSize: \"150%\", margin: \"1%\" }\n\tconst [\n\t\twaitingForTokenFromRecoveryKey,\n\t\tsetWaitingForTokenFromRecoveryKey,\n\t] = useState(false)\n\tconst [getFileCount, setGetFileCount] = useState(0)\n\tconst [removeFileCount, setRemoveFileCount] = useState(0)\n\tconst [getFileActivated, setGetFileActivated] = useState(false)\n\tconst [removeFileActivated, setRemoveFileActivated] = useState(false)\n\tconst [waitingForToken, setWaitingForToken] = useState(false)\n\tconst [recoveryKeyInputValue, setRecoveryKeyInputValue] = useState(\"\")\n\tconst [\n\t\ttokenFromRecoveryKeyInputValue,\n\t\tsetTokenFromRecoveryKeyInputValue,\n\t] = useState(\"\")\n\tconst [tokenInputValue, setTokenInputValue] = useState(\"\")\n\tconst [createProjectActivated, setCreateProjectActivated] = useState(false)\n\tconst [recoverTokenActivated, setRecoverTokenActivated] = useState(false)\n\tconst [importProjectActivated, setImportProjectActivated] = useState(false)\n\tconst [sentCount, setSentCount] = useState(0)\n\tconst [createCount, setCreateCount] = useState(0)\n\tconst [getContentCount, setGetContentCount] = useState(0)\n\tconst [recoverTokenCount, setRecoverTokenCount] = useState(0)\n\tconst [checkRecoveryKeyCount, setCheckRecoveryKeyCount] = useState(0)\n\tconst [recoveryTooLong, setRecoveryTooLong] = useState(false)\n\tconst [saveClicked, setSaveClicked] = useState(false)\n\tconst [tokenToSet, setTokenToSet] = useState(\"\")\n\tvar { responseSavedStatus, loadingSaved } = SaveProject(\n\t\tsentCount,\n\t\tprops.token,\n\t\tprops.content,\n\t)\n\tvar { responseToken, loadingResponseToken } = CreateProjectTokenRecovery(\n\t\trecoveryKeyInputValue,\n\t\tcreateCount,\n\t)\n\tCreateProjectTokenObject(props.content, props.token)\n\tvar { responseTokenFromRecovery } = GetTokenFromRecovery(\n\t\ttokenFromRecoveryKeyInputValue,\n\t\trecoverTokenCount,\n\t)\n\tvar { loadingGetFile } = GetFile(props.token, getFileCount)\n\tRemoveFile(props.token, removeFileCount)\n\tvar { responseContent } = GetContentFromToken(\n\t\ttokenInputValue,\n\t\tgetContentCount,\n\t)\n\tvar { checkRecoveryKeyStatus, loadingCheckRecoveryKey } = CheckRecoveryKey(\n\t\trecoveryKeyInputValue,\n\t\tcheckRecoveryKeyCount,\n\t)\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tresponseContent !== null &&\n\t\t\tresponseContent !== undefined &&\n\t\t\tresponseContent.length !== null\n\t\t) {\n\t\t\tprops.setContent(responseContent)\n\t\t}\n\t}, [responseContent])\n\n\tuseEffect(() => {\n\t\tif (!loadingCheckRecoveryKey && checkRecoveryKeyStatus === 200) {\n\t\t\tconsole.log(\"Cretae project\")\n\t\t\tcreateProject()\n\t\t}\n\t}, [checkRecoveryKeyStatus, loadingCheckRecoveryKey])\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!loadingResponseToken &&\n\t\t\tresponseToken !== null &&\n\t\t\tresponseToken !== \"\"\n\t\t) {\n\t\t\tsetTokenToSet(responseToken)\n\t\t}\n\t}, [responseToken])\n\n\tuseEffect(() => {\n\t\tif (!props.loginModalState) {\n\t\t\tprops.setToken(tokenToSet)\n\t\t}\n\t}, [tokenToSet, props.loginModalState])\n\n\tconst saveOnClick = () => {\n\t\tsetSentCount(sentCount + 1)\n\t\tsetSaveClicked(true)\n\t}\n\n\tconst createProject = () => {\n\t\tif (recoveryKeyInputValue.length > 29) {\n\t\t\tsetRecoveryTooLong(true)\n\t\t} else {\n\t\t\tsetCreateCount(createCount + 1)\n\t\t\tsetWaitingForToken(true)\n\t\t}\n\t}\n\n\tconst importProject = () => {\n\t\tsetGetContentCount(getContentCount + 1)\n\t\t// props.setToken(tokenInputValue)\n\t\tsetTokenToSet(tokenInputValue)\n\t\thideModal()\n\t}\n\n\tconst hideModal = () => {\n\t\tprops.setLoginModalStateActive(false)\n\t\tsetRecoveryTooLong(false)\n\t\tsetSaveClicked(false)\n\t\tsetCreateProjectActivated(false)\n\t\tsetWaitingForToken(false)\n\t\tprops.setToken(tokenToSet)\n\t\tsetWaitingForTokenFromRecoveryKey(false)\n\t\tsetImportProjectActivated(false)\n\t\tsetRecoverTokenActivated(false)\n\t\tsetGetFileActivated(false)\n\t\tif (removeFileActivated) {\n\t\t\tsetRemoveFileCount(removeFileCount + 1)\n\t\t\tsetRemoveFileActivated(false)\n\t\t}\n\t}\n\tconsole.log(\"Get file activated\", getFileActivated)\n\tconsole.log(\"Waiting for token\", getFileActivated)\n\tconst getFile = () => {\n\t\tsetGetFileActivated(true)\n\t\tsetGetFileCount(getFileCount + 1)\n\t\tsetRemoveFileActivated(true)\n\t}\n\n\tconst recoverToken = () => {\n\t\tsetRecoverTokenCount(recoverTokenCount + 1)\n\t\tsetWaitingForTokenFromRecoveryKey(true)\n\t}\n\n\tconsole.log(\"Token: \", props.token)\n\tconsole.log(props.token !== \"\", !waitingForToken, getFileActivated)\n\n\tif (\n\t\tprops.token === \"\" &&\n\t\t!createProjectActivated &&\n\t\t!importProjectActivated\n\t) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}> Create new project </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t\tonClick={() => setCreateProjectActivated(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tCreate{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t\t<span style={textStyle}> Import existing project </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t\tonClick={() => setImportProjectActivated(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tImport{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token !== \"\" && !waitingForToken && !getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}> Save your current project </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={saveOnClick}\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tSave{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`informationDiv ${\n\t\t\t\t\t\t\tresponseSavedStatus === 200 && !loadingSaved && saveClicked\n\t\t\t\t\t\t\t\t? \"unhide\"\n\t\t\t\t\t\t\t\t: \"hide\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tSaved successfully{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={`alertDiv ${\n\t\t\t\t\t\t\tresponseSavedStatus === 500 && !loadingSaved && saveClicked\n\t\t\t\t\t\t\t\t? \"unhide\"\n\t\t\t\t\t\t\t\t: \"hide\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tUnsuccessfull save, please try again later{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={getFile}\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tGet html file{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token !== \"\" && !waitingForToken && getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span> {loadingGetFile ? \"Loading file\" : \"\"} </span>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`temp-${props.token}.html`}\n\t\t\t\t\t\tclassName={`preview loginInput loginButton ${\n\t\t\t\t\t\t\tloadingGetFile ? \"hide\" : \"unhide\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tdownload=\"index.html\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tDownload file{\" \"}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && createProjectActivated && !waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tInsert recovery key in case you forget your token{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"input loginInput\"\n\t\t\t\t\t\tplaceholder=\"Recovery key\"\n\t\t\t\t\t\tvalue={recoveryKeyInputValue}\n\t\t\t\t\t\tonChange={(e: any) => setRecoveryKeyInputValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"informationDiv recoveryTooLong\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tMake sure you save this recovery key. You will need the key in case\n\t\t\t\t\t\tyou forget your token.\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`informationDiv ${\n\t\t\t\t\t\t\trecoveryTooLong ? \"alertDiv unhide\" : \"hide\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tYou recovery key is too long, make sure its under 30 carachters{\" \"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`alertDiv ${\n\t\t\t\t\t\t\tcheckRecoveryKeyStatus === 500 ? \"unhide\" : \"hide\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tThe recovery key is already taken{\" \"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setCheckRecoveryKeyCount(checkRecoveryKeyCount + 1)}\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tCreate{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (createProjectActivated && waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>{responseToken != null ? responseToken : \"\"}</span>\n\t\t\t\t\t<div className={`informationDiv `}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tMake sure you save this token. You will need the key to edit you\n\t\t\t\t\t\tproject the next time you want to edit it.\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={hideModal}\n\t\t\t\t\t\tclassName=\"preview loginButton\"\n\t\t\t\t\t\tstyle={{ margin: \"1%\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tContinue{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\t!recoverTokenActivated\n\t) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tImport your project with your project token{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className={`informationDiv `}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tIf you cant remember your token click recover token. You will be\n\t\t\t\t\t\table to recover your token with your recovery key\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"input loginInput\"\n\t\t\t\t\t\tplaceholder=\"Token\"\n\t\t\t\t\t\tvalue={tokenInputValue}\n\t\t\t\t\t\tonChange={(e: any) => setTokenInputValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ display: \"flex\", width: \"50%\", justifyContent: \"center\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setRecoverTokenActivated(true)}\n\t\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tRecovery{\" \"}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={importProject}\n\t\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tImport{\" \"}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\trecoverTokenActivated &&\n\t\t!waitingForTokenFromRecoveryKey\n\t) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tIntroduce recovery key to get your token{\" \"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"informationDiv\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tThis recovery key has to be unique so try with a personal phrase or\n\t\t\t\t\t\tsomething like that.{\" \"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"input loginInput\"\n\t\t\t\t\t\tplaceholder=\"Recovery key\"\n\t\t\t\t\t\tvalue={tokenFromRecoveryKeyInputValue}\n\t\t\t\t\t\tonChange={(e: any) =>\n\t\t\t\t\t\t\tsetTokenFromRecoveryKeyInputValue(e.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={recoverToken}\n\t\t\t\t\t\tclassName=\"preview loginInput loginButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tSubmit{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (\n\t\tprops.token === \"\" &&\n\t\timportProjectActivated &&\n\t\trecoverTokenActivated &&\n\t\twaitingForTokenFromRecoveryKey\n\t) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`overlay ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"overlayActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tonClick={hideModal}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`loginModal modal ${\n\t\t\t\t\t\tprops.loginModalStateActive ? \"modalActive\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{responseTokenFromRecovery !== null\n\t\t\t\t\t\t\t? responseTokenFromRecovery == 500\n\t\t\t\t\t\t\t\t? \"Wrong recovery key\"\n\t\t\t\t\t\t\t\t: responseTokenFromRecovery\n\t\t\t\t\t\t\t: \"\"}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className={`informationDiv`}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tMake sure you save this token. You will need the key to edit you\n\t\t\t\t\t\tproject the next time you want to edit it.\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={hideModal}\n\t\t\t\t\t\tclassName=\"preview loginButton loginInput\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tContinue{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn <>hi </>\n}\n\nexport default ModalLogin\n","/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/Modal.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modals/ModalEditPlacement.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/exceptionItems.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"148","replacedBy":"156"},{"ruleId":"150","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":25,"column":6,"nodeType":"160","endLine":25,"endColumn":19,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":32,"column":22,"nodeType":"164","messageId":"165","endLine":32,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":38,"column":11,"nodeType":"168","endLine":38,"endColumn":58},{"ruleId":"158","severity":1,"message":"169","line":24,"column":5,"nodeType":"160","endLine":24,"endColumn":29,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"171","line":27,"column":6,"nodeType":"160","endLine":27,"endColumn":29,"suggestions":"172"},{"ruleId":"158","severity":1,"message":"173","line":12,"column":6,"nodeType":"160","endLine":12,"endColumn":30,"suggestions":"174"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"175","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"176","line":32,"column":5,"nodeType":"160","endLine":32,"endColumn":16,"suggestions":"177"},{"ruleId":"158","severity":1,"message":"178","line":61,"column":5,"nodeType":"160","endLine":61,"endColumn":18,"suggestions":"179"},{"ruleId":"158","severity":1,"message":"180","line":90,"column":5,"nodeType":"160","endLine":90,"endColumn":12,"suggestions":"181"},{"ruleId":"158","severity":1,"message":"178","line":118,"column":5,"nodeType":"160","endLine":118,"endColumn":20,"suggestions":"182"},{"ruleId":"158","severity":1,"message":"183","line":147,"column":5,"nodeType":"160","endLine":147,"endColumn":22,"suggestions":"184"},{"ruleId":"158","severity":1,"message":"183","line":175,"column":5,"nodeType":"160","endLine":175,"endColumn":19,"suggestions":"185"},{"ruleId":"158","severity":1,"message":"183","line":203,"column":5,"nodeType":"160","endLine":203,"endColumn":22,"suggestions":"186"},{"ruleId":"158","severity":1,"message":"187","line":232,"column":5,"nodeType":"160","endLine":232,"endColumn":28,"suggestions":"188"},{"ruleId":"158","severity":1,"message":"173","line":50,"column":5,"nodeType":"160","endLine":50,"endColumn":28,"suggestions":"189"},{"ruleId":"158","severity":1,"message":"173","line":71,"column":6,"nodeType":"160","endLine":71,"endColumn":23,"suggestions":"190"},{"ruleId":"158","severity":1,"message":"191","line":78,"column":6,"nodeType":"160","endLine":78,"endColumn":55,"suggestions":"192"},{"ruleId":"158","severity":1,"message":"193","line":88,"column":6,"nodeType":"160","endLine":88,"endColumn":21,"suggestions":"194"},{"ruleId":"158","severity":1,"message":"173","line":94,"column":6,"nodeType":"160","endLine":94,"endColumn":41,"suggestions":"195"},{"ruleId":"162","severity":1,"message":"196","line":479,"column":43,"nodeType":"164","messageId":"165","endLine":479,"endColumn":45},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["197"],["198"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancelHover', 'increaseHoldIndex', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["199"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.on', 'props.propertyToToggle', and 'props.savedStyle'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["202"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'content', 'thisURL', and 'token'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'recoverykey' and 'thisURL'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'content' and 'thisURL'. Either include them or remove the dependency array.",["205"],["206"],"React Hook useEffect has missing dependencies: 'thisURL' and 'token'. Either include them or remove the dependency array.",["207"],["208"],["209"],"React Hook useEffect has missing dependencies: 'recoveryKey' and 'thisURL'. Either include them or remove the dependency array.",["210"],["211"],["212"],"React Hook useEffect has a missing dependency: 'createProject'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'loadingResponseToken'. Either include it or remove the dependency array.",["214"],["215"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [cancelHover, holdCounter, increaseHoldIndex, props]",{"range":"250","text":"251"},"Update the dependencies array to be: [props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",{"range":"252","text":"253"},"Update the dependencies array to be: [props, props.applyImageCount]",{"range":"254","text":"255"},"Update the dependencies array to be: [props, props.modalStateActive]",{"range":"256","text":"257"},"Update the dependencies array to be: [content, sentCount, thisURL, token]",{"range":"258","text":"259"},"Update the dependencies array to be: [createCount, recoverykey, thisURL]",{"range":"260","text":"261"},"Update the dependencies array to be: [content, thisURL, token]",{"range":"262","text":"263"},"Update the dependencies array to be: [recoveryCount, recoverykey, thisURL]",{"range":"264","text":"265"},"Update the dependencies array to be: [getContentCount, thisURL, token]",{"range":"266","text":"267"},"Update the dependencies array to be: [getFileCount, thisURL, token]",{"range":"268","text":"269"},"Update the dependencies array to be: [removeFileCount, thisURL, token]",{"range":"270","text":"271"},"Update the dependencies array to be: [checkRecoveryKeyCount, recoveryKey, thisURL]",{"range":"272","text":"273"},"Update the dependencies array to be: [props, props.applyTableCount]",{"range":"274","text":"275"},"Update the dependencies array to be: [props, responseContent]",{"range":"276","text":"277"},"Update the dependencies array to be: [checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",{"range":"278","text":"279"},"Update the dependencies array to be: [loadingResponseToken, responseToken]",{"range":"280","text":"281"},"Update the dependencies array to be: [tokenToSet, props.loginModalState, props]",{"range":"282","text":"283"},[735,748],"[cancelHover, holdCounter, increaseHoldIndex, props]",[578,602],"[props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",[769,792],"[props, props.applyImageCount]",[347,371],"[props, props.modalStateActive]",[1022,1033],"[content, sentCount, thisURL, token]",[2008,2021],"[createCount, recoverykey, thisURL]",[2899,2906],"[content, thisURL, token]",[3866,3881],"[recoveryCount, recoverykey, thisURL]",[4773,4790],"[getContentCount, thisURL, token]",[5675,5689],"[getFileCount, thisURL, token]",[6612,6629],"[removeFileCount, thisURL, token]",[7664,7687],"[checkRecoveryKeyCount, recoveryKey, thisURL]",[1325,1348],"[props, props.applyTableCount]",[2622,2639],"[props, responseContent]",[2801,2850],"[checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",[3026,3041],"[loadingResponseToken, responseToken]",[3142,3177],"[tokenToSet, props.loginModalState, props]"]