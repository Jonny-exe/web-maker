[{"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx":"1","/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts":"2","/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx":"3","/home/a/Documents/GitHub/web-maker/web-maker/src/AddButton.tsx":"4","/home/a/Documents/GitHub/web-maker/web-maker/src/Modal.tsx":"5","/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx":"6","/home/a/Documents/GitHub/web-maker/web-maker/src/Edit.tsx":"7","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx":"8","/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx":"9","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalImage.tsx":"10","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx":"11","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx":"12","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx":"13","/home/a/Documents/GitHub/web-maker/web-maker/src/AddItem.tsx":"14","/home/a/Documents/GitHub/web-maker/web-maker/src/AddImage.tsx":"15","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalImageSizeTable.tsx":"16","/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx":"17","/home/a/Documents/GitHub/web-maker/web-maker/src/defaultTypes.js":"18","/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx":"19","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalLogin.tsx":"20","/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx":"21","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalTable.tsx":"22","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTable.tsx":"23","/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx":"24","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTextCollumn.tsx":"25"},{"size":500,"mtime":1608888503576,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1608888503576,"results":"28","hashOfConfig":"27"},{"size":3142,"mtime":1609442720247,"results":"29","hashOfConfig":"27"},{"size":2526,"mtime":1609443347577,"results":"30","hashOfConfig":"27"},{"size":828,"mtime":1609436173480,"results":"31","hashOfConfig":"27"},{"size":445,"mtime":1608901941439,"results":"32","hashOfConfig":"27"},{"size":367,"mtime":1609325448503,"results":"33","hashOfConfig":"27"},{"size":1565,"mtime":1609443139668,"results":"34","hashOfConfig":"27"},{"size":2278,"mtime":1609443273177,"results":"35","hashOfConfig":"27"},{"size":1420,"mtime":1609437235548,"results":"36","hashOfConfig":"27"},{"size":1194,"mtime":1608888503576,"results":"37","hashOfConfig":"27"},{"size":946,"mtime":1609433147278,"results":"38","hashOfConfig":"27"},{"size":1421,"mtime":1609412613234,"results":"39","hashOfConfig":"27"},{"size":683,"mtime":1609439347340,"results":"40","hashOfConfig":"27"},{"size":1228,"mtime":1609443209077,"results":"41","hashOfConfig":"27"},{"size":1248,"mtime":1609327679861,"results":"42","hashOfConfig":"27"},{"size":804,"mtime":1608888503576,"results":"43","hashOfConfig":"27"},{"size":2046,"mtime":1609440387475,"results":"44","hashOfConfig":"27"},{"size":885,"mtime":1609436195312,"results":"45","hashOfConfig":"27"},{"size":12155,"mtime":1609436177720,"results":"46","hashOfConfig":"27"},{"size":7689,"mtime":1609425184088,"results":"47","hashOfConfig":"27"},{"size":1224,"mtime":1609436971080,"results":"48","hashOfConfig":"27"},{"size":1526,"mtime":1609436892136,"results":"49","hashOfConfig":"27"},{"size":616,"mtime":1609349244437,"results":"50","hashOfConfig":"27"},{"size":580,"mtime":1609436415401,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"l7xcaf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"54"},"/home/a/Documents/GitHub/web-maker/web-maker/src/index.tsx",[],["119","120"],"/home/a/Documents/GitHub/web-maker/web-maker/src/reportWebVitals.ts",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/App.tsx",["121","122","123","124","125","126","127","128","129","130"],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddButton.tsx",["131"],"/home/a/Documents/GitHub/web-maker/web-maker/src/Modal.tsx",["132","133"],"import React, { useEffect, useState } from 'react'\nimport StylesTextAlign from './StylesTextAlign'\nimport StylesToggle from './StylesToggle'\n\nexport const Modal = (props: any) => {\n  return (\n    <div className=\"inputContainer\">\n      <div className={`editModal ${props.modalStateActive ? \"editModalActive\" : \"\"}`}>\n        <StylesToggle modalStateActive={props.modalStateActive} on=\"solid\" off=\"none\" setSavedStyle={props.setSavedStyle} savedStyle={props.savedStyle} propertyToToggle={\"borderStyle\"} nameOfStyle={\"Border\"} />\n        <StylesTextAlign savedStyle={props.savedStyle} modalStateActive={props.modalStateActive} />\n      </div>\n      <div className={`overlay editOverlay ${props.modalStateActive ? \"overlayActive\" : \"\"}`} onClick={() => props.setModalStateActive(false)}></div>\n    </div>\n  )\n}\n\nexport default Modal","/home/a/Documents/GitHub/web-maker/web-maker/src/Preview.tsx",["134"],"import React, {useState} from 'react';\n\nexport const Preveiw = (props: any) => {\n  return (\n    <div className=\"preview\">\n      <button className={`preview ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={() => props.handlePreview(true)}> Preview </button>\n      <button className={`preview ${props.previewMode ? \"\" : \"previewMode\"}`} onClick={() => props.handlePreview(false)}> UnPreview </button>\n    </div>\n  );\n}\n\nexport default Preveiw\n","/home/a/Documents/GitHub/web-maker/web-maker/src/Edit.tsx",["135"],"import React, { useState } from 'react'\n\nexport const Edit = (props: any) => {\n\n\treturn (\n\t\t<div className=\"preview\">\n\t\t\t<button onClick={() => {\n\t\t\t\tprops.setModalStateActive(true)\n\t\t\t}} className={`preview ${props.previewMode ? \"previewMode\" : \"\"} ${props.displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`}> Edit </button>\n\t\t</div>\n\t)\n}\n\nexport default Edit",["136","137"],"/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent.tsx",["138","139","140","141","142","143","144"],"/home/a/Documents/GitHub/web-maker/web-maker/src/DropdownItems.tsx",["145"],"/home/a/Documents/GitHub/web-maker/web-maker/src/ModalImage.tsx",["146","147"],"import React, { useEffect, useState } from 'react';\nimport ModalImageSizeTabel from './ModalImageSizeTable'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst ModalImage = (props: any) => {\n\treturn (\n\t\t<div className=\"imageModalContainer\">\n\t\t\t<div className={`overlay addImageOverlay ${props.addImageOverlayActive ? \"overlayActive addImageOverlayActive\" : \"\"}`} onClick={() => props.setAddImageOverlayActive(false)}></div>\n\t\t\t<div className={`addImageModal editModal ${props.addImageOverlayActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t<h2 className=\"addImageModalHeader\" style={{margin: \"1%\"}}> Add your image url </h2>\n\t\t\t\t<input type=\"text\" className={`input ${props.previewMode ? \"previewMode\" : \"\"}`} value={props.imageSrc} placeholder=\"https:you-image-url\" onChange={(e: any) => props.setImageSrc(e.target.value)}  ></input>\n\t\t\t\t<div className=\"informationDiv\"> Select your image messurement, if you image is already good leave everything blank</div>\n\t\t\t\t<div className=\"imageModalSizeInputContainer\">\n\t\t\t\t\t<ModalImageSizeTabel imageSizes={props.imageSizes} />\n\t\t\t\t</div>\n\t\t\t\t<button className=\"preview addImageModalButton\" onClick={() => {\n\t\t\t\t\tprops.setAddImageOverlayActive(false)\n\t\t\t\t\tprops.setApplyImageCount(props.applyCount + 1)\n\t\t\t\t}}> Apply </button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default ModalImage;\n","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesTextAlign.tsx",["148"],"import React, { useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\nimport TextAlignCheckbox from './TextAlignCheckbox'\n\nexport const StylesTextAlign = (props: any) => {\n  const [selected, setSelected] = useState(\"\")\n\n  return (\n    <div className=\"textAlignContainer\">\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignJustify} type={\"justify\"} modalStateActive={props.modalStateActive} />\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignCenter} type={\"center\"} modalStateActive={props.modalStateActive }/>\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignLeft} type={\"left\"} modalStateActive={props.modalStateActive} />\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignRight} type={\"right\"} modalStateActive={props.modalStateActive} />\n    </div>\n  )\n}\n\nexport default StylesTextAlign","/home/a/Documents/GitHub/web-maker/web-maker/src/StylesToggle.tsx",["149","150"],"import React, { useEffect, useState } from 'react'\n\nexport const StylesToggle = (props: any) => {\n\tconst [checkbox, setCheckbox] = useState(false)\n\n\tconst handleCheckbox = (event: any) => {\n\t\tif (event.target.checked) {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.on\n\t\t\tsetCheckbox(true)\n\t\t} else {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.off\n\t\t\tsetCheckbox(false)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.modalStateActive) {\n\t\t\tif (props.savedStyle[props.propertyToToggle] == props.on) {\n\t\t\t\tsetCheckbox(true)\n\t\t\t} else {\n\t\t\t\tsetCheckbox(false)\n\t\t\t}\n\t\t}\n\t}, [props.modalStateActive])\n\n\treturn (\n\t\t<div className=\"stylesBorderContainer\">\n\t\t\t<label className=\"checkboxContainer\">\n\t\t\t\t<input onClick={(e: any) => handleCheckbox(e)} type=\"checkbox\" checked={checkbox} className=\"checkbox\"></input>\n\t\t\t\t<div className=\"checkboxFill\"></div>\n\t\t\t</label>\n\t\t\t<span> {props.nameOfStyle} </span>\n\t\t</div>\n\t)\n}\n\nexport default StylesToggle","/home/a/Documents/GitHub/web-maker/web-maker/src/RenderContent1.tsx",["151","152","153","154","155","156","157","158"],"import React, { useState } from 'react'\nimport RenderContent from './RenderContent'\nimport App from \"./App\"\n\nexport const RenderContent1 = (props: any) => {\n\treturn (\n\t\t<>\n\t\t\t{console.log(props.content)}\n\t\t\t{\n\t\t\t\tprops.content.map((x: any, i: number) => (\n\t\t\t\t\t// Images must be done separatly\n\n\t\t\t\t\tx.type == \"img\" ? <img style={x.style} src={x.src} alt=\"Image\"></img> :\n\t\t\t\t\t\tReact.createElement(x.type, {\n\t\t\t\t\t\t\tstyle: x.style,\n\t\t\t\t\t\t\tcontentEditable: x.type != \"table\" && x.type != \"tr\" ? \"true\" : \"false\", // this is has to be like this because if not it doesnt detect the td only the table\n\t\t\t\t\t\t\tplaceholder: x.text,\n\t\t\t\t\t\t\tcontent: \"hi\",\n\t\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t\t// props.handleDiv(e.target.innerText, i, e) // this could be set to e.target.innerHTML to use \" text \"\n\t\t\t\t\t\t\t\tprops.setDisplayButtons(true)\n\t\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonInput: (e: any) => {\n\t\t\t\t\t\t\t\t// if (x.type != \"table\" && x.type != \"tr\") {\n\t\t\t\t\t\t\t\tx.content = e.target.textContent\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfocusout: (e: any) => {\n\t\t\t\t\t\t\t\tprops.setDisplayButtons(false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\tx.children != undefined && x.children.length != 0 ? <RenderContent setDisplayButtons={props.setDisplayButtons} setSavedStyle={props.setSavedStyle} savedStyle={props.savedStyle} content={x.children} /> : x.content,\n\t\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default RenderContent1","/home/a/Documents/GitHub/web-maker/web-maker/src/AddItem.tsx",["159"],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddImage.tsx",["160","161","162"],"/home/a/Documents/GitHub/web-maker/web-maker/src/ModalImageSizeTable.tsx",["163","164","165"],"import React, { useEffect, useState } from 'react';\n\nconst ModalImageSizeTable = (props: any) => {\n\tconst [numberInputValue, setNumberInputValue] = useState({input1: \"\", input2: \"\"})\n\tconst handleNumberInput1 = (event: any) => {\n\t\tsetNumberInputValue(event.target.value)\n\t\tprops.imageSizes.width = 1\n\t} \n\n\treturn (\n\t\t<table className=\"imageModalTable\">\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<div> Select magnitude </div>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<select onChange={(e: any) => props.imageSizes.magnitude = e.target.value} className=\"preview imageModalSelect\">\n\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t<option value=\"%\"> Percentage </option>\n\t\t\t\t\t\t<option value=\"px\"> Pixel </option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr className=\"imageModalTable\">\n\t\t\t\t<td>\n\t\t\t\t\t<span> Width </span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"number\" onChange={(e: any) => props.imageSizes.width = e.target.value} placeholder=\"Desired Image width\" className=\"preview\"></input>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<span> Height </span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"number\" placeholder=\"Desired Image width\" onChange={(e: any) => props.imageSizes.height = e.target.value} className=\"preview\"></input>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t);\n}\n\n\nexport default ModalImageSizeTable;\n","/home/a/Documents/GitHub/web-maker/web-maker/src/TextAlignCheckbox.tsx",["166","167","168","169","170","171","172"],"import React, { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\n\nexport const TextAlignCheckbox = (props: any) => {\n  const handleClick = () => {\n    props.setSelected(props.type)\n    props.savedStyle.textAlign = props.type\n  }\n\n  useEffect(() => {\n    props.setSelected(props.savedStyle.textAlign)\n  }, [props.modalStateActive])\n\n  return (\n    <label className=\"checkboxContainer\" onClick={handleClick}>\n      <input type=\"checkbox\" className=\"checkbox\" checked={props.selected == props.type ? true : false}></input>\n      <FontAwesomeIcon className=\"textAlignIcon\" icon={props.icon} />\n    </label>\n  )\n}\n\nexport default TextAlignCheckbox","/home/a/Documents/GitHub/web-maker/web-maker/src/defaultTypes.js",["173"],"/home/a/Documents/GitHub/web-maker/web-maker/src/Login.tsx",["174","175"],"import React, { useEffect, useState } from 'react';\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ModalLogin from './ModalLogin'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst Login = (props: any) => {\n\tconst handleClick = () => {\n\t\tprops.setLoginModalStateActive(true)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<FontAwesomeIcon size={\"1x\"} icon={faUser} className={`preview ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={handleClick} />\n\t\t\t<ModalLogin content={props.content} setContent={props.setContent} token={props.token} setToken={props.setToken} loginModalStateActive={props.loginModalStateActive} setLoginModalStateActive={props.setLoginModalStateActive} />\n\t\t</>\n\t);\n}\n\n\nexport default Login;\n\n","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalLogin.tsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React, { useEffect, useState } from 'react';\nimport { isConstructorDeclaration } from 'typescript';\nimport ModalImageSizeTabel from './ModalImageSizeTable'\nimport { SaveProject, CreateProjectTokenRecovery, CreateProjectTokenObject, GetTokenFromRecovery, GetContentFromToken, GetFile, RemoveFile, CheckRecoveryKey } from './requests'\n\n\nconst ModalLogin = (props: any) => {\n\tconst textStyle = { fontSize: \"150%\", margin: \"1%\" }\n\tconst [waitingForTokenFromRecoveryKey, setWaitingForTokenFromRecoveryKey] = useState(false)\n\tconst [getFileCount, setGetFileCount] = useState(0)\n\tconst [removeFileCount, setRemoveFileCount] = useState(0)\n\tconst [getFileActivated, setGetFileActivated] = useState(false)\n\tconst [removeFileActivated, setRemoveFileActivated] = useState(false)\n\tconst [waitingForToken, setWaitingForToken] = useState(false)\n\tconst [inputValue, setInputValue] = useState(\"\")\n\tconst [recoveryKeyInputValue, setRecoveryKeyInputValue] = useState(\"\")\n\tconst [tokenFromRecoveryKeyInputValue, setTokenFromRecoveryKeyInputValue] = useState(\"\")\n\tconst [tokenInputValue, setTokenInputValue] = useState(\"\")\n\tconst [createProjectActivated, setCreateProjectActivated] = useState(false)\n\tconst [recoverTokenActivated, setRecoverTokenActivated] = useState(false)\n\tconst [importProjectActivated, setImportProjectActivated] = useState(false)\n\tconst [sentCount, setSentCount] = useState(0)\n\tconst [createCount, setCreateCount] = useState(0)\n\tconst [getContentCount, setGetContentCount] = useState(0)\n\tconst [recoverTokenCount, setRecoverTokenCount] = useState(0)\n\tconst [checkRecoveryKeyCount, setCheckRecoveryKeyCount] = useState(0)\n\tconst [recoveryTooLong, setRecoveryTooLong] = useState(false)\n\tconst [saveClicked, setSaveClicked] = useState(false)\n\tconst [recoveryKeyValid, setRecoveryKeyValid] = useState(false)\n\tconst [tokenToSet, setTokenToSet] = useState(\"\")\n\tvar { responseSavedStatus, loadingSaved } = SaveProject(sentCount, props.token, props.content)\n\tvar { responseToken, loadingResponseToken } = CreateProjectTokenRecovery(recoveryKeyInputValue, createCount)\n\tvar { responseStatus } = CreateProjectTokenObject(props.content, props.token)\n\tvar { responseTokenFromRecovery } = GetTokenFromRecovery(tokenFromRecoveryKeyInputValue, recoverTokenCount)\n\tvar { getFileStatus, loadingGetFile } = GetFile(props.token, getFileCount)\n\tvar { removeFileStatus, loadingRemoveFile} = RemoveFile(props.token, removeFileCount)\n\tvar { responseContent } = GetContentFromToken(tokenInputValue, getContentCount)\n\tvar { checkRecoveryKeyStatus, loadingCheckRecoveryKey } = CheckRecoveryKey(recoveryKeyInputValue, checkRecoveryKeyCount)\n\n\tuseEffect(() => {\n\t\tif (responseContent != null && responseContent != undefined && responseContent.length != null) {\n\t\t\tconsole.log(responseContent)\n\t\t\tprops.setContent(responseContent)\n\t\t}\n\t}, [responseContent])\n\n\tuseEffect(() => {\n\t\tconsole.log(\"LoadingCheckRecoveryKey: \", loadingCheckRecoveryKey, \"CheckrecoveryKeyStatus: \", checkRecoveryKeyStatus)\n\t\tif (!loadingCheckRecoveryKey && checkRecoveryKeyStatus == 200) {\n\t\t\tsetRecoveryKeyValid(true)\n\t\t\tconsole.log(\"Cretae project\")\n\t\t\tcreateProject()\n\t\t}\n\t}, [checkRecoveryKeyStatus, loadingCheckRecoveryKey\t])\n\n\tuseEffect(() => {\n\t\tif (!loadingResponseToken && responseToken != null && responseToken != \"\") {\n\t\t\tsetTokenToSet(responseToken)\n\t\t}\n\t}, [responseToken])\n\n\tuseEffect(() => {\n\t\tif (!props.loginModalState) {\n\t\t\tprops.setToken(tokenToSet)\n\t\t}\n\t}, [tokenToSet, props.loginModalState])\n\n\tconst handleLoginInput = (event: any) => {\n\t\tsetInputValue(event.target.value)\n\t}\n\n\tconst saveOnClick = () => {\n\t\tsetSentCount(sentCount + 1)\n\t\tsetSaveClicked(true)\n\t}\n\n\n\tconst createProject = () => {\n\t\tif (recoveryKeyInputValue.length > 29) {\n\t\t\tsetRecoveryTooLong(true)\n\t\t} else {\n\t\t\tsetCreateCount(createCount + 1)\n\t\t\tsetWaitingForToken(true)\n\t\t}\n\t}\n\n\tconst importProject = () => {\n\t\tsetGetContentCount(getContentCount + 1)\n\t\t// props.setToken(tokenInputValue)\n\t\tsetTokenToSet(tokenInputValue)\n\t\thideModal()\n\t}\n\n\tconsole.log(responseContent)\n\n\n\tconst hideModal = () => {\n\t\tprops.setLoginModalStateActive(false)\n\t\tsetRecoveryTooLong(false)\n\t\tsetSaveClicked(false)\n\t\tsetCreateProjectActivated(false)\n\t\tsetWaitingForToken(false)\n\t\tprops.setToken(tokenToSet)\n\t\tsetWaitingForTokenFromRecoveryKey(false)\n\t\tsetImportProjectActivated(false)\n\t\tsetRecoverTokenActivated(false)\n\t\tsetGetFileActivated(false)\n\t\tsetRecoveryKeyValid(false)\n\t\tif (removeFileActivated) {\n\t\t\tsetRemoveFileCount(removeFileCount + 1)\n\t\t\tsetRemoveFileActivated(false)\n\t\t}\n\t}\n\tconsole.log(\"Get file activated\", getFileActivated)\n\tconsole.log(\"Waiting for token\", getFileActivated)\n\tconst getFile = () => {\n\t\tsetGetFileActivated(true)\n\t\tsetGetFileCount(getFileCount + 1)\n\t\tsetRemoveFileActivated(true)\n\t}\n\n\tconst recoverToken = () => {\n\t\tsetRecoverTokenCount(recoverTokenCount + 1)\n\t\tsetWaitingForTokenFromRecoveryKey(true)\n\t}\n\n\tconsole.log(\"Token: \", props.token)\n\tconsole.log(props.token !== \"\" , !waitingForToken , getFileActivated)\n\n\tif (props.token === \"\" && !createProjectActivated && !importProjectActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Create new project </span>\n\t\t\t\t\t<button className=\"preview loginInput loginButton\" onClick={() => setCreateProjectActivated(true)}> Create </button>\n\t\t\t\t\t<span style={textStyle}> Import existing project </span>\n\t\t\t\t\t<button className=\"preview loginInput loginButton\" onClick={() => setImportProjectActivated(true)}> Import </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (props.token !== \"\" && !waitingForToken && !getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Save your current project </span>\n\t\t\t\t\t<button onClick={saveOnClick} className=\"preview loginInput loginButton\"> Save </button>\n\t\t\t\t\t<span className={`informationDiv ${responseSavedStatus == 200 && !loadingSaved && saveClicked ? \"unhide\" : \"hide\"}`}> Saved successfully </span>\n\t\t\t\t\t<span className={`alertDiv ${responseSavedStatus == 500 && !loadingSaved && saveClicked ? \"unhide\" : \"hide\"}`}> Unsuccessfull save, please try again later </span>\n\t\t\t\t\t<button type=\"button\" onClick={getFile} className=\"preview loginInput loginButton\"> Get html file </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (props.token !== \"\" && !waitingForToken && getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span> {loadingGetFile ? \"Loading file\" : \"\"} </span>\n\t\t\t\t\t<a href={`temp-${props.token}.html`} className={`preview loginInput loginButton ${loadingGetFile ? \"hide\" : \"unhide\"}`} download=\"index.html\" > Download file </a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && createProjectActivated && !waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Insert recovery key in case you forget your token </span>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Recovery key\" value={recoveryKeyInputValue} onChange={(e: any) => setRecoveryKeyInputValue(e.target.value)}></input>\n\t\t\t\t\t<div className=\"informationDiv recoveryTooLong\"> Make sure you save this recovery key. You will need the key in case you forget your token.</div>\n\t\t\t\t\t<div className={`informationDiv ${recoveryTooLong ? \"alertDiv unhide\" : \"hide\"}`}> You recovery key is too long, make sure its under 30 carachters </div>\n\t\t\t\t\t<div className={`alertDiv ${checkRecoveryKeyStatus == 500 ? \"unhide\" : \"hide\"}`}> The recovery key is already taken </div>\n\t\t\t\t\t<button onClick={() => setCheckRecoveryKeyCount(checkRecoveryKeyCount + 1)} className=\"preview loginInput loginButton\"> Create </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (createProjectActivated && waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>{responseToken != null ? responseToken : \"\"}</span>\n\t\t\t\t\t<div className={`informationDiv `}> Make sure you save this token. You will need the key to edit you project the next time you want to edit it.</div>\n\t\t\t\t\t<button onClick={hideModal} className=\"preview loginButton\" style={{ margin: \"1%\" }}> Continue </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && !recoverTokenActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Import your project with your project token </span>\n\t\t\t\t\t<div className={`informationDiv `}> If you cant remember your token click recover token. You will be able to recover your token with your recovery key</div>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Token\" value={tokenInputValue} onChange={(e: any) => setTokenInputValue(e.target.value)}></input>\n\t\t\t\t\t<div style={{ display: \"flex\", width: \"50%\", justifyContent: \"center\" }}>\n\t\t\t\t\t\t<button onClick={() => setRecoverTokenActivated(true)} className=\"preview loginInput loginButton\" > Recovery </button>\n\t\t\t\t\t\t<button onClick={importProject} className=\"preview loginInput loginButton\" > Import </button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && recoverTokenActivated && !waitingForTokenFromRecoveryKey) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Introduce recovery key to get your token </span>\n\t\t\t\t\t<div className=\"informationDiv\"> This recovery key has to be unique so try with a personal phrase or something like that. </div>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Recovery key\" value={tokenFromRecoveryKeyInputValue} onChange={(e: any) => setTokenFromRecoveryKeyInputValue(e.target.value)}></input>\n\t\t\t\t\t<button onClick={recoverToken} className=\"preview loginInput loginButton\"> Submit </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && recoverTokenActivated && waitingForTokenFromRecoveryKey) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>{responseTokenFromRecovery != null ? responseTokenFromRecovery == 500 ? \"Wrong recovery key\" : responseTokenFromRecovery : \"\"}</span>\n\t\t\t\t\t<div className={`informationDiv`}> Make sure you save this token. You will need the key to edit you project the next time you want to edit it.</div>\n\t\t\t\t\t<button onClick={hideModal} className=\"preview loginButton loginInput\"> Continue </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (<>hi </>)\n}\n\n\nexport default ModalLogin;\n","/home/a/Documents/GitHub/web-maker/web-maker/src/requests.tsx",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState } from 'react'\n\nconst url = process.env.REACT_APP_REQUEST_URL\nconst headersContent = {}\nconsole.log(process.env)\n\nexport const SaveProject = (sentCount: number, token: string, content: object) => {\n\tconst [state, setState] = useState({ responseSavedStatus: 0, loadingSaved: true })\n\tconst thisURL = url + \"updateTokenObject\"\n\tuseEffect(() => {\n\t\tif (sentCount != 0) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token,\n\t\t\t\tobject: content\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseSavedStatus: state.responseSavedStatus, loadingSaved: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ responseSavedStatus: data, loadingSaved: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseSavedStatus: 0, loadingSaved: false })\n\t\t}\n\t}, [sentCount])\n\treturn state\n}\n\nexport const CreateProjectTokenRecovery = (recoverykey: string, createCount: number) => {\n\tconst [state, setState] = useState({ responseToken: \"\", loadingResponseToken: true })\n\tconst thisURL = url + \"insertTokenRecovery\"\n\tuseEffect(() => {\n\t\tconsole.log(createCount)\n\t\tif (createCount > 0 && createCount != null && createCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseToken: state.responseToken, loadingResponseToken: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseToken: data, loadingResponseToken: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseToken: \"\", loadingResponseToken: false })\n\t\t}\n\t}, [createCount])\n\treturn state\n}\n\nexport const CreateProjectTokenObject = (content: any, token: string) => {\n\tconst [state, setState] = useState({ responseStatus: \"\", loading: true })\n\tconst thisURL = url + \"insertTokenObject\"\n\tuseEffect(() => {\n\t\tif (token != \"\" && token != null && token != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\tcontent: content,\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseStatus: state.responseStatus, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseStatus: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseStatus: \"\", loading: false })\n\t\t}\n\t}, [token])\n\treturn state\n}\n\nexport const GetTokenFromRecovery = (recoverykey: string, recoveryCount: number) => {\n\tconst [state, setState] = useState({ responseTokenFromRecovery: null, loading: true })\n\tconst thisURL = url + \"getTokenFromRecovery\"\n\tuseEffect(() => {\n\t\tif (recoveryCount > 0 && recoveryCount != null && recoveryCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseTokenFromRecovery: state.responseTokenFromRecovery, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: any = await response.json()\n\t\t\t\tsetState({ responseTokenFromRecovery: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseTokenFromRecovery: null, loading: false })\n\t\t}\n\t}, [recoveryCount])\n\treturn state\n}\n\n\nexport const GetContentFromToken = (token: string, getContentCount: number) => {\n\tconst [state, setState] = useState({ responseContent: [], loading: true })\n\tconst thisURL = url + \"getObjectFromToken\"\n\tuseEffect(() => {\n\t\tif (getContentCount > 0 && getContentCount != null && getContentCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseContent: state.responseContent, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: [] = await response.json()\n\t\t\t\tsetState({ responseContent: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseContent: [], loading: false })\n\t\t}\n\t}, [getContentCount])\n\treturn state\n}\n\nexport const GetFile = (token: string, getFileCount: number) => {\n\tconst [state, setState] = useState({ getFileStatus: 0, loadingGetFile: true })\n\tconst thisURL = url + \"exportIntoHTML\"\n\tuseEffect(() => {\n\t\tif (getFileCount > 0 && getFileCount != null && getFileCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ getFileStatus: state.getFileStatus, loadingGetFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ getFileStatus: data, loadingGetFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ getFileStatus: 500, loadingGetFile: false })\n\t\t}\n\t}, [getFileCount])\n\treturn state\n}\n\nexport const RemoveFile = (token: string, removeFileCount: number) => {\n\tconst [state, setState] = useState({ removeFileStatus: 0, loadingRemoveFile: true })\n\tconst thisURL = url + \"removeFile\"\n\tuseEffect(() => {\n\t\tif (removeFileCount > 0 && removeFileCount != null && removeFileCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ removeFileStatus: state.removeFileStatus, loadingRemoveFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ removeFileStatus: data, loadingRemoveFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ removeFileStatus: 500, loadingRemoveFile: false })\n\t\t}\n\t}, [removeFileCount])\n\treturn state\n}\n\n\nexport const CheckRecoveryKey = (recoveryKey: string, checkRecoveryKeyCount: number) => {\n\tconst [state, setState] = useState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: true })\n\tconst thisURL = url + \"doesRecoveryKeyExist\"\n\tuseEffect(() => {\n\t\tif (checkRecoveryKeyCount > 0 && checkRecoveryKeyCount != null && checkRecoveryKeyCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoveryKey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ checkRecoveryKeyStatus: state.checkRecoveryKeyStatus, loadingCheckRecoveryKey: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ checkRecoveryKeyStatus: data, loadingCheckRecoveryKey: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: false })\n\t\t}\n\t}, [checkRecoveryKeyCount])\n\treturn state\n}\n","/home/a/Documents/GitHub/web-maker/web-maker/src/ModalTable.tsx",["214","215"],"import React, { useEffect, useState } from 'react';\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst ModalTable = (props: any) => {\n\treturn (\n\t\t<div className=\"imageModalContainer\">\n\t\t\t<div className={`overlay addImageOverlay ${props.addTableOverlayActive ? \"overlayActive addImageOverlayActive\" : \"\"}`} onClick={() => props.setAddTableOverlayActive(false)}></div>\n\t\t\t<div className={`addImageModal tableSizesContainer editModal ${props.addTableOverlayActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t<h1 style={{fontWeight: \"normal\"}}> Create table </h1>\n\t\t\t\t<input type=\"number\" placeholder=\"Height\" className=\"loginInput input tableSizesInput\" onChange={(e: any) => props.tableSizes.width = e.target.value}></input>\n\t\t\t\t<input type=\"number\" placeholder=\"Width\" className=\"loginInput input tableSizesInput\" onChange={(e: any) => props.tableSizes.height = e.target.value}></input>\n\t\t\t\t<button className=\"preview addImageModalButton\" onClick={() => {\n\t\t\t\t\tprops.setAddTableOverlayActive(false)\n\t\t\t\t\tprops.setApplyTableCount(props.applyCount + 1)\n\t\t\t\t}}> Apply </button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default ModalTable;\n\n","/home/a/Documents/GitHub/web-maker/web-maker/src/AddTable.tsx",["216","217","218"],"import React, { useEffect, useState } from 'react'\nimport { table } from './defaultTypes.js'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst AddTable = (props: any) => {\n\tconst addTable = () => {\n\t\tprops.setAddTableOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyTableCount == 0) {\n\t\t\treturn\n\t\t}\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, table)\n\t\tconsole.log(\"TableSizes: \", props.tableSizes)\n\t\tfor (let i = 0; i < props.tableSizes.height; i++) {\n\t\t\titemCopy.children.push({\n\t\t\t\ttype: \"tr\",\n\t\t\t\ttext: \"Tr\",\n\t\t\t\tstyle: {\n\t\t\t\t\t// margin: \"1%\",\n\t\t\t\t\tborder: \"1px solid\"\n\t\t\t\t},\n\t\t\t\tchildren: []\n\t\t\t})\n\t\t\tfor (let n = 0; n < props.tableSizes.width; n++) {\n\t\t\t\titemCopy.children[i].children.push({\n\t\t\t\t\ttype: \"td\",\n\t\t\t\t\ttext: \"Td\",\n\t\t\t\t\tcontent: \"\",\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: `${100 / props.tableSizes.width - 1}`,\n\t\t\t\t\t\t// display: \"block\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t// margin: \"1%\",\n\t\t\t\t\t\tborder: \"1px solid\"\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\t// itemCopy.style.width = props.imageSizes.width + props.imageSizes.magnitude\n\t\t// itemCopy.style.height = props.imageSizes.height + props.imageSizes.magnitude\n\t\tconsole.log(\"itemcopy: \", itemCopy)\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyTableCount])\n\tconsole.log(\"apply table count\", props.applyTableCount)\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addTable} className=\"dropdown\">\n\t\t\t\t<FontAwesomeIcon size={\"2x\"} icon={props.icon}  />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddTable","/home/a/Documents/GitHub/web-maker/web-maker/src/Alerts.tsx",[],"/home/a/Documents/GitHub/web-maker/web-maker/src/AddTextCollumn.tsx",["219"],"import React, { useState } from 'react'\nimport { columnItem } from './defaultTypes.js'\nimport { faColumns } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst AddTextCollumns = (props: any) => {\n\tconst addTitle = () => {\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, columnItem)\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}\n\treturn (\n\t\t<div onClick={addTitle} className=\"dropdown\">\n\t\t\t<FontAwesomeIcon size={\"2x\"} icon={faColumns}  />\n\t\t</div>\n\t)\n}\n\nexport default AddTextCollumns",{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":20},{"ruleId":"224","severity":1,"message":"228","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":12},{"ruleId":"224","severity":1,"message":"229","line":20,"column":10,"nodeType":"226","messageId":"227","endLine":20,"endColumn":24},{"ruleId":"224","severity":1,"message":"230","line":23,"column":10,"nodeType":"226","messageId":"227","endLine":23,"endColumn":14},{"ruleId":"224","severity":1,"message":"231","line":23,"column":16,"nodeType":"226","messageId":"227","endLine":23,"endColumn":23},{"ruleId":"224","severity":1,"message":"232","line":25,"column":10,"nodeType":"226","messageId":"227","endLine":25,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":35,"column":9,"nodeType":"226","messageId":"235","endLine":35,"endColumn":17},{"ruleId":"224","severity":1,"message":"236","line":39,"column":9,"nodeType":"226","messageId":"227","endLine":39,"endColumn":18},{"ruleId":"224","severity":1,"message":"237","line":48,"column":9,"nodeType":"226","messageId":"227","endLine":48,"endColumn":17},{"ruleId":"224","severity":1,"message":"238","line":52,"column":9,"nodeType":"226","messageId":"227","endLine":52,"endColumn":22},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"240","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":24},{"ruleId":"224","severity":1,"message":"240","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"220","replacedBy":"241"},{"ruleId":"222","replacedBy":"242"},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"243","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":11},{"ruleId":"224","severity":1,"message":"244","line":6,"column":22,"nodeType":"226","messageId":"227","endLine":6,"endColumn":36},{"ruleId":"245","severity":1,"message":"246","line":14,"column":13,"nodeType":"247","messageId":"248","endLine":14,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":14,"column":24,"nodeType":"251","endLine":14,"endColumn":69},{"ruleId":"245","severity":1,"message":"252","line":34,"column":19,"nodeType":"247","messageId":"248","endLine":34,"endColumn":21},{"ruleId":"245","severity":1,"message":"252","line":34,"column":53,"nodeType":"247","messageId":"248","endLine":34,"endColumn":55},{"ruleId":"224","severity":1,"message":"253","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":20},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"254","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":18,"column":49,"nodeType":"247","messageId":"248","endLine":18,"endColumn":51},{"ruleId":"255","severity":1,"message":"256","line":24,"column":5,"nodeType":"257","endLine":24,"endColumn":29,"suggestions":"258"},{"ruleId":"224","severity":1,"message":"240","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"243","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":11},{"ruleId":"245","severity":1,"message":"246","line":13,"column":13,"nodeType":"247","messageId":"248","endLine":13,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":13,"column":24,"nodeType":"251","endLine":13,"endColumn":69},{"ruleId":"245","severity":1,"message":"252","line":16,"column":32,"nodeType":"247","messageId":"248","endLine":16,"endColumn":34},{"ruleId":"245","severity":1,"message":"252","line":16,"column":53,"nodeType":"247","messageId":"248","endLine":16,"endColumn":55},{"ruleId":"245","severity":1,"message":"252","line":34,"column":19,"nodeType":"247","messageId":"248","endLine":34,"endColumn":21},{"ruleId":"245","severity":1,"message":"252","line":34,"column":53,"nodeType":"247","messageId":"248","endLine":34,"endColumn":55},{"ruleId":"224","severity":1,"message":"240","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"246","line":11,"column":24,"nodeType":"247","messageId":"248","endLine":11,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":29,"column":5,"nodeType":"257","endLine":29,"endColumn":28,"suggestions":"260"},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"261","line":4,"column":9,"nodeType":"226","messageId":"227","endLine":4,"endColumn":25},{"ruleId":"224","severity":1,"message":"262","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":26},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"263","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":23},{"ruleId":"224","severity":1,"message":"264","line":3,"column":25,"nodeType":"226","messageId":"227","endLine":3,"endColumn":39},{"ruleId":"224","severity":1,"message":"265","line":3,"column":41,"nodeType":"226","messageId":"227","endLine":3,"endColumn":52},{"ruleId":"224","severity":1,"message":"266","line":3,"column":54,"nodeType":"226","messageId":"227","endLine":3,"endColumn":66},{"ruleId":"255","severity":1,"message":"267","line":13,"column":6,"nodeType":"257","endLine":13,"endColumn":30,"suggestions":"268"},{"ruleId":"245","severity":1,"message":"246","line":17,"column":75,"nodeType":"247","messageId":"248","endLine":17,"endColumn":77},{"ruleId":"269","severity":1,"message":"263","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":23},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"270","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":34},{"ruleId":"224","severity":1,"message":"271","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":27},{"ruleId":"224","severity":1,"message":"272","line":15,"column":9,"nodeType":"226","messageId":"227","endLine":15,"endColumn":19},{"ruleId":"224","severity":1,"message":"273","line":29,"column":9,"nodeType":"226","messageId":"227","endLine":29,"endColumn":25},{"ruleId":"224","severity":1,"message":"274","line":33,"column":8,"nodeType":"226","messageId":"227","endLine":33,"endColumn":22},{"ruleId":"224","severity":1,"message":"275","line":35,"column":8,"nodeType":"226","messageId":"227","endLine":35,"endColumn":21},{"ruleId":"224","severity":1,"message":"276","line":36,"column":8,"nodeType":"226","messageId":"227","endLine":36,"endColumn":24},{"ruleId":"224","severity":1,"message":"277","line":36,"column":26,"nodeType":"226","messageId":"227","endLine":36,"endColumn":43},{"ruleId":"245","severity":1,"message":"252","line":41,"column":50,"nodeType":"247","messageId":"248","endLine":41,"endColumn":52},{"ruleId":"255","severity":1,"message":"267","line":45,"column":5,"nodeType":"257","endLine":45,"endColumn":22,"suggestions":"278"},{"ruleId":"245","severity":1,"message":"246","line":49,"column":58,"nodeType":"247","messageId":"248","endLine":49,"endColumn":60},{"ruleId":"255","severity":1,"message":"279","line":54,"column":5,"nodeType":"257","endLine":54,"endColumn":55,"suggestions":"280"},{"ruleId":"245","severity":1,"message":"252","line":57,"column":71,"nodeType":"247","messageId":"248","endLine":57,"endColumn":73},{"ruleId":"255","severity":1,"message":"281","line":60,"column":5,"nodeType":"257","endLine":60,"endColumn":20,"suggestions":"282"},{"ruleId":"255","severity":1,"message":"267","line":66,"column":5,"nodeType":"257","endLine":66,"endColumn":40,"suggestions":"283"},{"ruleId":"224","severity":1,"message":"284","line":68,"column":8,"nodeType":"226","messageId":"227","endLine":68,"endColumn":24},{"ruleId":"245","severity":1,"message":"246","line":149,"column":61,"nodeType":"247","messageId":"248","endLine":149,"endColumn":63},{"ruleId":"245","severity":1,"message":"246","line":150,"column":55,"nodeType":"247","messageId":"248","endLine":150,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":174,"column":57,"nodeType":"247","messageId":"248","endLine":174,"endColumn":59},{"ruleId":"245","severity":1,"message":"246","line":224,"column":75,"nodeType":"247","messageId":"248","endLine":224,"endColumn":77},{"ruleId":"224","severity":1,"message":"285","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"245","severity":1,"message":"252","line":11,"column":17,"nodeType":"247","messageId":"248","endLine":11,"endColumn":19},{"ruleId":"255","severity":1,"message":"286","line":32,"column":5,"nodeType":"257","endLine":32,"endColumn":16,"suggestions":"287"},{"ruleId":"245","severity":1,"message":"252","line":41,"column":61,"nodeType":"247","messageId":"248","endLine":41,"endColumn":63},{"ruleId":"255","severity":1,"message":"288","line":61,"column":5,"nodeType":"257","endLine":61,"endColumn":18,"suggestions":"289"},{"ruleId":"245","severity":1,"message":"252","line":69,"column":13,"nodeType":"247","messageId":"248","endLine":69,"endColumn":15},{"ruleId":"245","severity":1,"message":"252","line":69,"column":45,"nodeType":"247","messageId":"248","endLine":69,"endColumn":47},{"ruleId":"255","severity":1,"message":"290","line":90,"column":5,"nodeType":"257","endLine":90,"endColumn":12,"suggestions":"291"},{"ruleId":"245","severity":1,"message":"252","line":98,"column":67,"nodeType":"247","messageId":"248","endLine":98,"endColumn":69},{"ruleId":"255","severity":1,"message":"288","line":118,"column":5,"nodeType":"257","endLine":118,"endColumn":20,"suggestions":"292"},{"ruleId":"245","severity":1,"message":"252","line":127,"column":73,"nodeType":"247","messageId":"248","endLine":127,"endColumn":75},{"ruleId":"255","severity":1,"message":"293","line":147,"column":5,"nodeType":"257","endLine":147,"endColumn":22,"suggestions":"294"},{"ruleId":"245","severity":1,"message":"252","line":155,"column":64,"nodeType":"247","messageId":"248","endLine":155,"endColumn":66},{"ruleId":"255","severity":1,"message":"293","line":175,"column":5,"nodeType":"257","endLine":175,"endColumn":19,"suggestions":"295"},{"ruleId":"245","severity":1,"message":"252","line":183,"column":73,"nodeType":"247","messageId":"248","endLine":183,"endColumn":75},{"ruleId":"255","severity":1,"message":"293","line":203,"column":5,"nodeType":"257","endLine":203,"endColumn":22,"suggestions":"296"},{"ruleId":"245","severity":1,"message":"252","line":212,"column":91,"nodeType":"247","messageId":"248","endLine":212,"endColumn":93},{"ruleId":"255","severity":1,"message":"297","line":232,"column":5,"nodeType":"257","endLine":232,"endColumn":28,"suggestions":"298"},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"240","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"246","line":11,"column":29,"nodeType":"247","messageId":"248","endLine":11,"endColumn":31},{"ruleId":"255","severity":1,"message":"267","line":48,"column":5,"nodeType":"257","endLine":48,"endColumn":28,"suggestions":"299"},{"ruleId":"224","severity":1,"message":"240","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"@typescript-eslint/no-unused-vars","'DropdownMenu' is defined but never used.","Identifier","unusedVar","'Edit' is defined but never used.","'displayButtons' is assigned a value but never used.","'html' is assigned a value but never used.","'setHtml' is assigned a value but never used.","'savedIndex' is assigned a value but never used.","@typescript-eslint/no-redeclare","'newArray' is already defined.","redeclared","'handleDiv' is assigned a value but never used.","'logStyle' is assigned a value but never used.","'handlePreview' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["300"],["301"],"'App' is defined but never used.","'setNotEditable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'DropdownItem' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.on', 'props.propertyToToggle', and 'props.savedStyle'. Either include them or remove the dependency array.","ArrayExpression",["302"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["303"],"'numberInputValue' is assigned a value but never used.","'handleNumberInput1' is assigned a value but never used.","'faAlignCenter' is defined but never used.","'faAlignJustify' is defined but never used.","'faAlignLeft' is defined but never used.","'faAlignRight' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["304"],"no-unused-vars","'isConstructorDeclaration' is defined but never used.","'ModalImageSizeTabel' is defined but never used.","'inputValue' is assigned a value but never used.","'recoveryKeyValid' is assigned a value but never used.","'responseStatus' is assigned a value but never used.","'getFileStatus' is assigned a value but never used.","'removeFileStatus' is assigned a value but never used.","'loadingRemoveFile' is assigned a value but never used.",["305"],"React Hook useEffect has a missing dependency: 'createProject'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has a missing dependency: 'loadingResponseToken'. Either include it or remove the dependency array.",["307"],["308"],"'handleLoginInput' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'content', 'thisURL', and 'token'. Either include them or remove the dependency array.",["309"],"React Hook useEffect has missing dependencies: 'recoverykey' and 'thisURL'. Either include them or remove the dependency array.",["310"],"React Hook useEffect has missing dependencies: 'content' and 'thisURL'. Either include them or remove the dependency array.",["311"],["312"],"React Hook useEffect has missing dependencies: 'thisURL' and 'token'. Either include them or remove the dependency array.",["313"],["314"],["315"],"React Hook useEffect has missing dependencies: 'recoveryKey' and 'thisURL'. Either include them or remove the dependency array.",["316"],["317"],"no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",{"range":"350","text":"351"},"Update the dependencies array to be: [props, props.applyImageCount]",{"range":"352","text":"353"},"Update the dependencies array to be: [props, props.modalStateActive]",{"range":"354","text":"355"},"Update the dependencies array to be: [props, responseContent]",{"range":"356","text":"357"},"Update the dependencies array to be: [checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",{"range":"358","text":"359"},"Update the dependencies array to be: [loadingResponseToken, responseToken]",{"range":"360","text":"361"},"Update the dependencies array to be: [tokenToSet, props.loginModalState, props]",{"range":"362","text":"363"},"Update the dependencies array to be: [content, sentCount, thisURL, token]",{"range":"364","text":"365"},"Update the dependencies array to be: [createCount, recoverykey, thisURL]",{"range":"366","text":"367"},"Update the dependencies array to be: [content, thisURL, token]",{"range":"368","text":"369"},"Update the dependencies array to be: [recoveryCount, recoverykey, thisURL]",{"range":"370","text":"371"},"Update the dependencies array to be: [getContentCount, thisURL, token]",{"range":"372","text":"373"},"Update the dependencies array to be: [getFileCount, thisURL, token]",{"range":"374","text":"375"},"Update the dependencies array to be: [removeFileCount, thisURL, token]",{"range":"376","text":"377"},"Update the dependencies array to be: [checkRecoveryKeyCount, recoveryKey, thisURL]",{"range":"378","text":"379"},"Update the dependencies array to be: [props, props.applyTableCount]",{"range":"380","text":"381"},[577,601],"[props.modalStateActive, props.on, props.propertyToToggle, props.savedStyle]",[1002,1025],"[props, props.applyImageCount]",[467,491],"[props, props.modalStateActive]",[2818,2835],"[props, responseContent]",[3133,3183],"[checkRecoveryKeyStatus, createProject, loadingCheckRecoveryKey]",[3324,3339],"[loadingResponseToken, responseToken]",[3431,3466],"[tokenToSet, props.loginModalState, props]",[1021,1032],"[content, sentCount, thisURL, token]",[2005,2018],"[createCount, recoverykey, thisURL]",[2893,2900],"[content, thisURL, token]",[3858,3873],"[recoveryCount, recoverykey, thisURL]",[4763,4780],"[getContentCount, thisURL, token]",[5663,5677],"[getFileCount, thisURL, token]",[6598,6615],"[removeFileCount, thisURL, token]",[7648,7671],"[checkRecoveryKeyCount, recoveryKey, thisURL]",[1279,1302],"[props, props.applyTableCount]"]