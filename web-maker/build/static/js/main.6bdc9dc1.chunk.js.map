{"version":3,"sources":["Preview.tsx","defaultTypes.js","AddItem.tsx","AddImage.tsx","DropdownItems.tsx","ModalImageSizeTable.tsx","ModalImage.tsx","AddButton.tsx","TextAlignCheckbox.tsx","StylesTextAlign.tsx","StylesToggle.tsx","Modal.tsx","RenderContent1.tsx","RenderContent.tsx","requests.tsx","ModalLogin.tsx","Login.tsx","Edit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Preveiw","props","className","previewMode","onClick","handlePreview","image","type","text","src","style","margin","width","height","item","content","maxWidth","wordWrap","children","AddItem","console","log","itemCopy","Object","assign","push","setEditCount","editCount","AddImage","useEffect","applyCount","imageSizes","magnitude","setAddImageOverlayActive","DropdownItems","menuState","setContent","imageSrc","ModalImageSizeTable","useState","input1","input2","onChange","e","target","value","placeholder","ModalImage","addImageOverlayActive","setImageSrc","setApplyCount","AddButton","setMenuState","setImageSizes","size","icon","faPlus","TextAlignCheckbox","setSelected","savedStyle","textAlign","modalStateActive","checked","selected","StylesTextAlign","faAlignJustify","faAlignCenter","faAlignLeft","faAlignRight","StylesToggle","checkbox","setCheckbox","propertyToToggle","on","off","nameOfStyle","Modal","setModalStateActive","RenderContent1","map","x","i","alt","React","createElement","contentEditable","setDisplayButtons","setSavedStyle","focusout","length","undefined","RenderContent","onInput","textContent","headersContent","ModalLogin","textStyle","fontSize","waitingForTokenFromRecoveryKey","setWaitingForTokenFromRecoveryKey","getFileCount","setGetFileCount","removeFileCount","setRemoveFileCount","getFileActivated","setGetFileActivated","removeFileActivated","setRemoveFileActivated","waitingForToken","setWaitingForToken","recoveryKeyInputValue","setRecoveryKeyInputValue","tokenFromRecoveryKeyInputValue","setTokenFromRecoveryKeyInputValue","tokenInputValue","setTokenInputValue","createProjectActivated","setCreateProjectActivated","recoverTokenActivated","setRecoverTokenActivated","importProjectActivated","setImportProjectActivated","sentCount","setSentCount","createCount","setCreateCount","getContentCount","setGetContentCount","recoverTokenCount","setRecoverTokenCount","checkRecoveryKeyCount","setCheckRecoveryKeyCount","recoveryTooLong","setRecoveryTooLong","saveClicked","setSaveClicked","setRecoveryKeyValid","tokenToSet","setTokenToSet","token","responseSavedStatus","loadingSaved","state","setState","bodyContent","object","requestOptions","method","headers","body","JSON","stringify","a","fetch","url","response","json","data","loadData","SaveProject","recoverykey","responseToken","loadingResponseToken","recovery_key","CreateProjectTokenRecovery","responseTokenFromRecovery","responseStatus","loading","CreateProjectTokenObject","recoveryCount","GetTokenFromRecovery","getFileStatus","loadingGetFile","GetFile","removeFileStatus","loadingRemoveFile","RemoveFile","responseContent","GetContentFromToken","recoveryKey","checkRecoveryKeyStatus","loadingCheckRecoveryKey","CheckRecoveryKey","createProject","loginModalState","setToken","hideModal","setLoginModalStateActive","loginModalStateActive","href","download","display","justifyContent","Login","faUser","Edit","displayButtons","App","addButtonStateActive","setAddButtonStateActive","divCount","setDivCount","array","setArray","input","setInput","savedInput","borderStyle","setPreviewMode","Preview","addToDivCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bdc9dc1.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport const Preveiw = (props: any) => {\n  return (\n    <div className=\"preview\">\n      <button className={`preview ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={() => props.handlePreview(true)}> Preview </button>\n      <button className={`preview ${props.previewMode ? \"\" : \"previewMode\"}`} onClick={() => props.handlePreview(false)}> UnPreview </button>\n    </div>\n  );\n}\n\nexport default Preveiw\n","export const title = {\n    type: \"h1\",\n    text: \"Title\",\n    content: \"\",\n    style: {\n        margin: \"1%\"\n    },\n    children: []\n}\n\nexport const subTitle = {\n    type: \"h2\",\n    text: \"SubTitle\",\n    content: \"\",\n    style: {\n        margin: \"1%\"\n    },\n    children: []\n}\n\nexport const heading = {\n    type: \"h3\",\n    text: \"Heading\",\n    content: \"\",\n    style: {\n        margin: \"1%\"\n    },\n    children: []\n}\n\nexport const span = {\n    type: \"span\",\n    text: \"Text\",\n    content: \"\",\n    style: {\n        margin: \"1%\"\n    },\n    children: []\n}\n\nexport const div = {\n    type: \"div\",\n    text: \"Text\",\n    content: \"\",\n    style: {\n        margin: \"1%\"\n    },\n    children: []\n}\n\nexport const image = {\n    type: \"img\",\n    text: \"Image\",\n    src: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.whYid2jKN-8c3BUhtIoSTgHaEK%26pid%3DApi&f=1\",\n    style: {\n        margin: \"1%\",\n        width: \"\",\n        height: \"\"\n    },\n}\n\nexport const item = {\n    type: \"\",\n    text: \"\",\n    content: \"\",\n    style: {\n        margin: \"1%\",\n        maxWidth: \"100%\",\n        wordWrap: \"break-word\"\n    },\n    children: []\n}\n\n","import React, { useState } from 'react'\nimport { item } from './defaultTypes.js'\n\nconst AddItem = (props: any) => {\n\tconst addTitle = () => {\n\t\tconsole.log(props.content)\n\t\t// var content = props.content\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, item)\n\t\tconsole.log(props)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}\n\treturn (\n\t\t<div onClick={addTitle} className=\"dropdown\">\n\t\t\tAdd {props.text}\n\t\t</div>\n\t)\n}\n\nexport default AddItem","import React, { useEffect, useState } from 'react'\nimport { image } from './defaultTypes.js'\n\nconst AddImage = (props: any) => {\n\tconst addImage = () => {\n\t\tprops.setAddImageOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyCount == 0) {\n\t\t\treturn\n\t\t}\n\t\tconsole.log(props.content)\n\t\t// var content = props.content\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, image)\n\t\tconsole.log(props)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\titemCopy.src = props.src\n\t\tconsole.log(props.imageSizes.width)\n\t\titemCopy.style = {width: props.imageSizes.width + props.imageSizes.magnitude, height: props.imageSizes.width + props.imageSizes.magnitude}\n\t\tconsole.log(itemCopy.style)\n\t\t// itemCopy.style.width = props.imageSizes.width + props.imageSizes.magnitude\n\t\t// itemCopy.style.height = props.imageSizes.height + props.imageSizes.magnitude\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyCount])\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addImage} className=\"dropdown\">\n\t\t\t\tAdd {props.text}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddImage","import React from 'react'\nimport DropdownItem from './DropdownItem'\nimport AddItem from './AddItem'\nimport AddImage from './AddImage'\n// import types from \"./types.js\"\n\nexport const DropdownItems = (props: any) => {\n\treturn (\n\t\t<div className={`dropdownMenuItems ${props.menuState ? \"showDropdownItems\" : \"notShowDropdownItems\"}`}>\n\t\t\t<AddItem type={\"h1\"} text={\"Title\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"h2\"} text={\"SubTitle\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"h3\"} text={\"Heading\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"p\"} text={\"Text\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddImage type={\"img\"} text={\"Image\"} imageSizes={props.imageSizes} src={props.imageSrc} applyCount={props.applyCount} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} setAddImageOverlayActive={props.setAddImageOverlayActive}/>\n\t\t</div>\n\t)\n}\n\nexport default DropdownItems","import React, { useEffect, useState } from 'react';\n\nconst ModalImageSizeTable = (props: any) => {\n\tconst [numberInputValue, setNumberInputValue] = useState({input1: \"\", input2: \"\"})\n\tconst handleNumberInput1 = (event: any) => {\n\t\tsetNumberInputValue(event.target.value)\n\t\tprops.imageSizes.width = 1\n\t} \n\n\treturn (\n\t\t<table className=\"imageModalTable\">\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<div> Select magnitude </div>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<select onChange={(e: any) => props.imageSizes.magnitude = e.target.value} className=\"preview imageModalSelect\">\n\t\t\t\t\t\t<option value=\"\"></option>\n\t\t\t\t\t\t<option value=\"%\"> Percentage </option>\n\t\t\t\t\t\t<option value=\"px\"> Pixel </option>\n\t\t\t\t\t</select>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr className=\"imageModalTable\">\n\t\t\t\t<td>\n\t\t\t\t\t<span> Width </span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"number\" onChange={(e: any) => props.imageSizes.width = e.target.value} placeholder=\"Desired Image width\" className=\"preview\"></input>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<span> Height </span>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"number\" placeholder=\"Desired Image width\" onChange={(e: any) => props.imageSizes.height = e.target.value} className=\"preview\"></input>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t);\n}\n\n\nexport default ModalImageSizeTable;\n","import React, { useEffect, useState } from 'react';\nimport ModalImageSizeTabel from './ModalImageSizeTable'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst ModalImage = (props: any) => {\n\treturn (\n\t\t<div className=\"imageModalContainer\">\n\t\t\t<div className={`overlay addImageOverlay ${props.addImageOverlayActive ? \"overlayActive addImageOverlayActive\" : \"\"}`} onClick={() => props.setAddImageOverlayActive(false)}></div>\n\t\t\t<div className={`addImageModal editModal ${props.addImageOverlayActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t<h2 className=\"addImageModalHeader\"> Add your image url </h2>\n\t\t\t\t<input type=\"text\" className={`input ${props.previewMode ? \"previewMode\" : \"\"}`} value={props.imageSrc} placeholder=\"https:you-image-url\" onChange={(e: any) => props.setImageSrc(e.target.value)}  ></input>\n\t\t\t\t<div className=\"informationDiv\"> Select your image messurement, if you image is already good leave everything blank</div>\n\t\t\t\t<div className=\"imageModalSizeInputContainer\">\n\t\t\t\t\t<ModalImageSizeTabel imageSizes={props.imageSizes} />\n\t\t\t\t</div>\n\t\t\t\t<button className=\"preview addImageModalButton\" onClick={() => {\n\t\t\t\t\tprops.setAddImageOverlayActive(false)\n\t\t\t\t\tprops.setApplyCount(props.applyCount + 1)\n\t\t\t\t}}> Apply </button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nexport default ModalImage;\n","import React, { useEffect, useState } from 'react';\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DropdownItems from './DropdownItems'\nimport ModalImage from './ModalImage'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst AddButton = (props: any) => {\n  const [imageSrc, setImageSrc] = useState(\"\")\n  const [menuState, setMenuState] = useState(false)\n  const [addImageOverlayActive, setAddImageOverlayActive] = useState(false)\n  const [applyCount, setApplyCount] = useState(0)\n  const [imageSizes, setImageSizes] = useState({ width: 1, height: 1, magnitude: \"\" })\n  console.log(imageSizes)\n\n  const handleClick = () => {\n    setMenuState(!menuState)\n  }\n\n  return (\n    <div className=\"addButtonContainer\">\n      <div className=\"\">\n        <FontAwesomeIcon size={\"2x\"} icon={faPlus} className={`addButton ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={handleClick} />\n      </div>\n      <DropdownItems imageSrc={imageSrc} imageSizes={imageSizes} applyCount={applyCount} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} setAddImageOverlayActive={setAddImageOverlayActive} menuState={menuState} />\n      <div className={`overlay addButtonOverlay ${menuState ? \"overlayActive addButtonOverlayActive\" : \"\"}`} onClick={() => setMenuState(false)}></div>\n      <ModalImage imageSrc={imageSrc} setImageSrc={setImageSrc} imageSizes={imageSizes} setImageSizes={setImageSizes} setApplyCount={setApplyCount} applyCount={applyCount} addImageOverlayActive={addImageOverlayActive} setAddImageOverlayActive={setAddImageOverlayActive} />\n    </div>\n  );\n}\n\n\nexport default AddButton;\n","import React, { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\n\nexport const TextAlignCheckbox = (props: any) => {\n  const handleClick = () => {\n    props.setSelected(props.type)\n    props.savedStyle.textAlign = props.type\n  }\n\n  useEffect(() => {\n    props.setSelected(props.savedStyle.textAlign)\n  }, [props.modalStateActive])\n\n  return (\n    <label className=\"checkboxContainer\" onClick={handleClick}>\n      <input type=\"checkbox\" className=\"checkbox\" checked={props.selected == props.type ? true : false}></input>\n      <FontAwesomeIcon className=\"textAlignIcon\" icon={props.icon} />\n    </label>\n  )\n}\n\nexport default TextAlignCheckbox","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\nimport TextAlignCheckbox from './TextAlignCheckbox'\n\nexport const StylesTextAlign = (props: any) => {\n  const [selected, setSelected] = useState(\"\")\n\n  return (\n    <div className=\"textAlignContainer\">\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignJustify} type={\"justify\"} modalStateActive={props.modalStateActive} />\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignCenter} type={\"center\"} modalStateActive={props.modalStateActive }/>\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignLeft} type={\"left\"} modalStateActive={props.modalStateActive} />\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignRight} type={\"right\"} modalStateActive={props.modalStateActive} />\n    </div>\n  )\n}\n\nexport default StylesTextAlign","import React, { useEffect, useState } from 'react'\n\nexport const StylesToggle = (props: any) => {\n\tconst [checkbox, setCheckbox] = useState(false)\n\n\tconst handleCheckbox = (event: any) => {\n\t\tif (event.target.checked) {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.on\n\t\t\tsetCheckbox(true)\n\t\t} else {\n\t\t\tprops.savedStyle[props.propertyToToggle] = props.off\n\t\t\tsetCheckbox(false)\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tif (props.modalStateActive) {\n\t\t\tif (props.savedStyle[props.propertyToToggle] == props.on) {\n\t\t\t\tsetCheckbox(true)\n\t\t\t} else {\n\t\t\t\tsetCheckbox(false)\n\t\t\t}\n\t\t}\n\t}, [props.modalStateActive])\n\n\treturn (\n\t\t<div className=\"stylesBorderContainer\">\n\t\t\t<label className=\"checkboxContainer\">\n\t\t\t\t<input onClick={(e: any) => handleCheckbox(e)} type=\"checkbox\" checked={checkbox} className=\"checkbox\"></input>\n\t\t\t\t<div className=\"checkboxFill\"></div>\n\t\t\t</label>\n\t\t\t<span> {props.nameOfStyle} </span>\n\t\t</div>\n\t)\n}\n\nexport default StylesToggle","import React, { useEffect, useState } from 'react'\nimport StylesTextAlign from './StylesTextAlign'\nimport StylesToggle from './StylesToggle'\n\nexport const Modal = (props: any) => {\n\n  // const handleInput = (event: any) => {\n  //   props.setInput(event.target.value)\n  //   props.savedInput.textContent = props.html\n  // }\n\n  return (\n    <div className=\"inputContainer\">\n      {/* <input type=\"text\" value={props.input} className={`input ${props.previewMode ? \"previewMode\" : \"\"}`}></input> */}\n      {/* <button onClick={() => props.setModalStateActive(true)}> modal </button> */}\n      <div className={`editModal ${props.modalStateActive ? \"editModalActive\" : \"\"}`}>\n        <StylesToggle modalStateActive={props.modalStateActive} on=\"solid\" off=\"none\" savedStyle={props.savedStyle} propertyToToggle={\"borderStyle\"} nameOfStyle={\"Border\"} />\n        <StylesTextAlign savedStyle={props.savedStyle} modalStateActive={props.modalStateActive} />\n      </div>\n      <div className={`overlay editOverlay ${props.modalStateActive ? \"overlayActive\" : \"\"}`} onClick={() => props.setModalStateActive(false)}></div>\n    </div>\n  )\n}\n\nexport default Modal","import React, { useState } from 'react'\nimport RenderContent from './RenderContent'\nimport App from \"./App\"\n\nexport const RenderContent1 = (props: any) => {\n\treturn (\n\t\t<div className=\"render\">\n\t\t\t{console.log(props.content)}\n\t\t\t{\n\t\t\t\tprops.content.map((x: any, i: number) => (\n\t\t\t\t\t// Images must be done separatly\n\t\t\t\t\tx.type == \"img\" ? <img style={x.style} src={x.src} alt=\"Image\"></img> :\n\t\t\t\t\t\tReact.createElement(x.type, {\n\t\t\t\t\t\t\tstyle: x.style,\n\t\t\t\t\t\t\tcontentEditable: \"true\",\n\t\t\t\t\t\t\tplaceholder: x.text,\n\t\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t\t// props.handleDiv(e.target.innerText, i, e) // this could be set to e.target.innerHTML to use \" text \"\n\t\t\t\t\t\t\t\tprops.setDisplayButtons(true)\n\t\t\t\t\t\t\t\t// props.savedStyle.borderStyle = \"\"\n\t\t\t\t\t\t\t\t// e.target.style.border = \"2px solid black\"\n\t\t\t\t\t\t\t\t// e.target.style.borderRadius = \"5px\"\n\t\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfocusout: (e: any) => {\n\t\t\t\t\t\t\t\tprops.setDisplayButtons(false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\tx.children.length != 0 && x.children != undefined ? <RenderContent1 content={x.children} /> : \"\",\n\t\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default RenderContent1","import React, { useState } from 'react'\nimport RenderContent1 from './RenderContent1'\nimport App from \"./App\"\n\nexport const RenderContent = (props: any) => {\n\treturn (\n\t\t<div className=\"render\">\n\t\t\t{console.log(props.content)}\n\t\t\t{\n\t\t\t\tprops.content.map((x: any, i: number) => (\n\t\t\t\t\t// Images must be done separatly\n\n\t\t\t\t\t// {const hi = \"\"}\n\t\t\t\t\tx.type == \"img\" ? <img style={x.style} src={x.src} alt=\"Image\"></img>: \n\t\t\t\t\tReact.createElement(x.type, {\n            style: x.style,\n            contentEditable: \"true\",\n\t\t\t\t\t\tplaceholder: x.text,\n\t\t\t\t\t\tcontent: \"\",\n\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t// props.handleDiv(e.target.innerText, i, e) // this could be set to e.target.innerHTML to use \" text \"\n\t\t\t\t\t\t\tprops.setDisplayButtons(true)\n\t\t\t\t\t\t\t// props.savedStyle.borderStyle = \"\"\n\t\t\t\t\t\t\t// e.target.style.border = \"2px solid black\"\n\t\t\t\t\t\t\t// e.target.style.borderRadius = \"5px\"\n\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonInput: (e: any) => {\n\t\t\t\t\t\t\tconsole.log(e.target)\n\t\t\t\t\t\t\tconsole.log(e.target.textContent)\n\t\t\t\t\t\t\tx.content = e.target.textContent\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocusout:  (e: any) => {\n\t\t\t\t\t\t\tprops.setDisplayButtons(false)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\tx.children.length != 0 && x.children != undefined ? <RenderContent1 content={x.children} /> : x.content,\n\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default RenderContent","import React, { useEffect, useState } from 'react'\n\nconst url = \"http://localhost:5000/\"\nconst headersContent = {}\n\nexport const SaveProject = (sentCount: number, token: string, content: object) => {\n\tconst [state, setState] = useState({ responseSavedStatus: 0, loadingSaved: true })\n\tconst thisURL = url + \"updateTokenObject\"\n\tuseEffect(() => {\n\t\tif (sentCount != 0) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token,\n\t\t\t\tobject: content\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseSavedStatus: state.responseSavedStatus, loadingSaved: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ responseSavedStatus: data, loadingSaved: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseSavedStatus: 0, loadingSaved: false })\n\t\t}\n\t}, [sentCount])\n\treturn state\n}\n\nexport const CreateProjectTokenRecovery = (recoverykey: string, createCount: number) => {\n\tconst [state, setState] = useState({ responseToken: \"\", loadingResponseToken: true })\n\tconst thisURL = url + \"insertTokenRecovery\"\n\tuseEffect(() => {\n\t\tconsole.log(createCount)\n\t\tif (createCount > 0 && createCount != null && createCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseToken: state.responseToken, loadingResponseToken: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseToken: data, loadingResponseToken: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseToken: \"\", loadingResponseToken: false })\n\t\t}\n\t}, [createCount])\n\treturn state\n}\n\nexport const CreateProjectTokenObject = (content: any, token: string) => {\n\tconst [state, setState] = useState({ responseStatus: \"\", loading: true })\n\tconst thisURL = url + \"insertTokenObject\"\n\tuseEffect(() => {\n\t\tif (token != \"\" && token != null && token != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\tcontent: content,\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseStatus: state.responseStatus, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: string = await response.json()\n\t\t\t\tsetState({ responseStatus: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseStatus: \"\", loading: false })\n\t\t}\n\t}, [token])\n\treturn state\n}\n\nexport const GetTokenFromRecovery = (recoverykey: string, recoveryCount: number) => {\n\tconst [state, setState] = useState({ responseTokenFromRecovery: null, loading: true })\n\tconst thisURL = url + \"getTokenFromRecovery\"\n\tuseEffect(() => {\n\t\tif (recoveryCount > 0 && recoveryCount != null && recoveryCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoverykey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseTokenFromRecovery: state.responseTokenFromRecovery, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: any = await response.json()\n\t\t\t\tsetState({ responseTokenFromRecovery: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseTokenFromRecovery: null, loading: false })\n\t\t}\n\t}, [recoveryCount])\n\treturn state\n}\n\n\nexport const GetContentFromToken = (token: string, getContentCount: number) => {\n\tconst [state, setState] = useState({ responseContent: [], loading: true })\n\tconst thisURL = url + \"getObjectFromToken\"\n\tuseEffect(() => {\n\t\tif (getContentCount > 0 && getContentCount != null && getContentCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ responseContent: state.responseContent, loading: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: [] = await response.json()\n\t\t\t\tsetState({ responseContent: data, loading: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ responseContent: [], loading: false })\n\t\t}\n\t}, [getContentCount])\n\treturn state\n}\n\nexport const GetFile = (token: string, getFileCount: number) => {\n\tconst [state, setState] = useState({ getFileStatus: 0, loadingGetFile: true })\n\tconst thisURL = url + \"exportIntoHTML\"\n\tuseEffect(() => {\n\t\tif (getFileCount > 0 && getFileCount != null && getFileCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ getFileStatus: state.getFileStatus, loadingGetFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ getFileStatus: data, loadingGetFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ getFileStatus: 500, loadingGetFile: false })\n\t\t}\n\t}, [getFileCount])\n\treturn state\n}\n\nexport const RemoveFile = (token: string, removeFileCount: number) => {\n\tconst [state, setState] = useState({ removeFileStatus: 0, loadingRemoveFile: true })\n\tconst thisURL = url + \"removeFile\"\n\tuseEffect(() => {\n\t\tif (removeFileCount > 0 && removeFileCount != null && removeFileCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ removeFileStatus: state.removeFileStatus, loadingRemoveFile: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ removeFileStatus: data, loadingRemoveFile: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ removeFileStatus: 500, loadingRemoveFile: false })\n\t\t}\n\t}, [removeFileCount])\n\treturn state\n}\n\n\nexport const CheckRecoveryKey = (recoveryKey: string, checkRecoveryKeyCount: number) => {\n\tconst [state, setState] = useState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: true })\n\tconst thisURL = url + \"doesRecoveryKeyExist\"\n\tuseEffect(() => {\n\t\tif (checkRecoveryKeyCount > 0 && checkRecoveryKeyCount != null && checkRecoveryKeyCount != undefined) {\n\t\t\tvar bodyContent = {\n\t\t\t\trecovery_key: recoveryKey\n\t\t\t}\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: headersContent,\n\t\t\t\t// credentials: 'same-origin',\n\t\t\t\tbody: JSON.stringify(bodyContent)\n\t\t\t}\n\t\t\tsetState(state => ({ checkRecoveryKeyStatus: state.checkRecoveryKeyStatus, loadingCheckRecoveryKey: true }))\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst response = await fetch(thisURL, requestOptions)\n\t\t\t\tvar data: number = await response.json()\n\t\t\t\tsetState({ checkRecoveryKeyStatus: data, loadingCheckRecoveryKey: false })\n\t\t\t}\n\t\t\tloadData()\n\t\t} else {\n\t\t\tsetState({ checkRecoveryKeyStatus: 0, loadingCheckRecoveryKey: false })\n\t\t}\n\t}, [checkRecoveryKeyCount])\n\treturn state\n}","import React, { useEffect, useState } from 'react';\nimport { isConstructorDeclaration } from 'typescript';\nimport ModalImageSizeTabel from './ModalImageSizeTable'\nimport { SaveProject, CreateProjectTokenRecovery, CreateProjectTokenObject, GetTokenFromRecovery, GetContentFromToken, GetFile, RemoveFile, CheckRecoveryKey } from './requests'\n\n\nconst ModalLogin = (props: any) => {\n\tconst textStyle = { fontSize: \"150%\", margin: \"1%\" }\n\tconst [waitingForTokenFromRecoveryKey, setWaitingForTokenFromRecoveryKey] = useState(false)\n\tconst [getFileCount, setGetFileCount] = useState(0)\n\tconst [removeFileCount, setRemoveFileCount] = useState(0)\n\tconst [getFileActivated, setGetFileActivated] = useState(false)\n\tconst [removeFileActivated, setRemoveFileActivated] = useState(false)\n\tconst [waitingForToken, setWaitingForToken] = useState(false)\n\tconst [inputValue, setInputValue] = useState(\"\")\n\tconst [recoveryKeyInputValue, setRecoveryKeyInputValue] = useState(\"\")\n\tconst [tokenFromRecoveryKeyInputValue, setTokenFromRecoveryKeyInputValue] = useState(\"\")\n\tconst [tokenInputValue, setTokenInputValue] = useState(\"\")\n\tconst [createProjectActivated, setCreateProjectActivated] = useState(false)\n\tconst [recoverTokenActivated, setRecoverTokenActivated] = useState(false)\n\tconst [importProjectActivated, setImportProjectActivated] = useState(false)\n\tconst [sentCount, setSentCount] = useState(0)\n\tconst [createCount, setCreateCount] = useState(0)\n\tconst [getContentCount, setGetContentCount] = useState(0)\n\tconst [recoverTokenCount, setRecoverTokenCount] = useState(0)\n\tconst [checkRecoveryKeyCount, setCheckRecoveryKeyCount] = useState(0)\n\tconst [recoveryTooLong, setRecoveryTooLong] = useState(false)\n\tconst [saveClicked, setSaveClicked] = useState(false)\n\tconst [recoveryKeyValid, setRecoveryKeyValid] = useState(false)\n\tconst [tokenToSet, setTokenToSet] = useState(\"\")\n\tvar { responseSavedStatus, loadingSaved } = SaveProject(sentCount, props.token, props.content)\n\tvar { responseToken, loadingResponseToken } = CreateProjectTokenRecovery(recoveryKeyInputValue, createCount)\n\tvar { responseStatus } = CreateProjectTokenObject(props.content, props.token)\n\tvar { responseTokenFromRecovery } = GetTokenFromRecovery(tokenFromRecoveryKeyInputValue, recoverTokenCount)\n\tvar { getFileStatus, loadingGetFile } = GetFile(props.token, getFileCount)\n\tvar { removeFileStatus, loadingRemoveFile} = RemoveFile(props.token, removeFileCount)\n\tvar { responseContent } = GetContentFromToken(tokenInputValue, getContentCount)\n\tvar { checkRecoveryKeyStatus, loadingCheckRecoveryKey } = CheckRecoveryKey(recoveryKeyInputValue, checkRecoveryKeyCount)\n\tconsole.log(checkRecoveryKeyCount)\n\n\tuseEffect(() => {\n\t\tif (responseContent != null && responseContent != undefined && responseContent.length != null) {\n\t\t\tconsole.log(responseContent)\n\t\t\tprops.setContent(responseContent)\n\t\t}\n\t}, [responseContent])\n\n\tuseEffect(() => {\n\t\tconsole.log(\"LoadingCheckRecoveryKey: \", loadingCheckRecoveryKey, \"CheckrecoveryKeyStatus: \", checkRecoveryKeyStatus)\n\t\tif (!loadingCheckRecoveryKey && checkRecoveryKeyStatus == 200) {\n\t\t\tsetRecoveryKeyValid(true)\n\t\t\tconsole.log(\"Cretae project\")\n\t\t\tcreateProject()\n\t\t}\n\t}, [checkRecoveryKeyStatus, loadingCheckRecoveryKey\t])\n\n\tuseEffect(() => {\n\t\tif (!loadingResponseToken && responseToken != null && responseToken != \"\") {\n\t\t\tsetTokenToSet(responseToken)\n\t\t}\n\t}, [responseToken])\n\n\tuseEffect(() => {\n\t\tif (!props.loginModalState) {\n\t\t\tprops.setToken(tokenToSet)\n\t\t}\n\t}, [tokenToSet, props.loginModalState])\n\n\tconst handleLoginInput = (event: any) => {\n\t\tsetInputValue(event.target.value)\n\t}\n\n\tconst saveOnClick = () => {\n\t\tsetSentCount(sentCount + 1)\n\t\tsetSaveClicked(true)\n\t}\n\n\n\tconst createProject = () => {\n\t\tif (recoveryKeyInputValue.length > 29) {\n\t\t\tsetRecoveryTooLong(true)\n\t\t} else {\n\t\t\tsetCreateCount(createCount + 1)\n\t\t\tsetWaitingForToken(true)\n\t\t}\n\t}\n\n\tconst importProject = () => {\n\t\tsetGetContentCount(getContentCount + 1)\n\t\t// props.setToken(tokenInputValue)\n\t\tsetTokenToSet(tokenInputValue)\n\t\thideModal()\n\t}\n\n\tconsole.log(responseContent)\n\n\n\tconst hideModal = () => {\n\t\tprops.setLoginModalStateActive(false)\n\t\tsetRecoveryTooLong(false)\n\t\tsetSaveClicked(false)\n\t\tsetCreateProjectActivated(false)\n\t\tsetWaitingForToken(false)\n\t\tprops.setToken(tokenToSet)\n\t\tsetWaitingForTokenFromRecoveryKey(false)\n\t\tsetImportProjectActivated(false)\n\t\tsetRecoverTokenActivated(false)\n\t\tsetGetFileActivated(false)\n\t\tsetRecoveryKeyValid(false)\n\t\tif (removeFileActivated) {\n\t\t\tsetRemoveFileCount(removeFileCount + 1)\n\t\t\tsetRemoveFileActivated(false)\n\t\t}\n\t}\n\tconsole.log(\"Get file activated\", getFileActivated)\n\tconsole.log(\"Waiting for token\", getFileActivated)\n\tconst getFile = () => {\n\t\tsetGetFileActivated(true)\n\t\tsetGetFileCount(getFileCount + 1)\n\t\tsetRemoveFileActivated(true)\n\t}\n\n\tconst recoverToken = () => {\n\t\tsetRecoverTokenCount(recoverTokenCount + 1)\n\t\tsetWaitingForTokenFromRecoveryKey(true)\n\t}\n\n\tconsole.log(\"Token: \", props.token)\n\tconsole.log(props.token !== \"\" , !waitingForToken , getFileActivated)\n\n\tif (props.token === \"\" && !createProjectActivated && !importProjectActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Create new project </span>\n\t\t\t\t\t<button className=\"preview loginInput loginButton\" onClick={() => setCreateProjectActivated(true)}> Create </button>\n\t\t\t\t\t<span style={textStyle}> Import existing project </span>\n\t\t\t\t\t<button className=\"preview loginInput loginButton\" onClick={() => setImportProjectActivated(true)}> Import </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (props.token !== \"\" && !waitingForToken && !getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Save your current project </span>\n\t\t\t\t\t<button onClick={saveOnClick} className=\"preview loginInput loginButton\"> Save </button>\n\t\t\t\t\t<span className={`informationDiv ${responseSavedStatus == 200 && !loadingSaved && saveClicked ? \"unhide\" : \"hide\"}`}> Saved successfully </span>\n\t\t\t\t\t<span className={`alertDiv ${responseSavedStatus == 500 && !loadingSaved && saveClicked ? \"unhide\" : \"hide\"}`}> Unsuccessfull save, please try again later </span>\n\t\t\t\t\t<button type=\"button\" onClick={getFile} className=\"preview loginInput loginButton\"> Get html file </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else if (props.token !== \"\" && !waitingForToken && getFileActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span> {loadingGetFile ? \"Loading file\" : \"\"} </span>\n\t\t\t\t\t<a href={`${props.token}.html`} className={`preview loginInput loginButton ${loadingGetFile ? \"hide\" : \"unhide\"}`} download > Download file </a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && createProjectActivated && !waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Insert recovery key in case you forget your token </span>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Recovery key\" value={recoveryKeyInputValue} onChange={(e: any) => setRecoveryKeyInputValue(e.target.value)}></input>\n\t\t\t\t\t<div className=\"informationDiv recoveryTooLong\"> Make sure you save this recovery key. You will need the key in case you forget your token.</div>\n\t\t\t\t\t<div className={`informationDiv ${recoveryTooLong ? \"alertDiv unhide\" : \"hide\"}`}> You recovery key is too long, make sure its under 30 carachters </div>\n\t\t\t\t\t<div className={`alertDiv ${checkRecoveryKeyStatus == 500 ? \"unhide\" : \"hide\"}`}> The recovery key is already taken </div>\n\t\t\t\t\t<button onClick={() => setCheckRecoveryKeyCount(checkRecoveryKeyCount + 1)} className=\"preview loginInput loginButton\"> Create </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (createProjectActivated && waitingForToken) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>{responseToken != null ? responseToken : \"\"}</span>\n\t\t\t\t\t<div className={`informationDiv `}> Make sure you save this token. You will need the key to edit you project the next time you want to edit it.</div>\n\t\t\t\t\t<button onClick={hideModal} className=\"preview loginButton\" style={{ margin: \"1%\" }}> Continue </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && !recoverTokenActivated) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Import your project with your project token </span>\n\t\t\t\t\t<div className={`informationDiv `}> If you cant remember your token click recover token. You will be able to recover your token with your recovery key</div>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Token\" value={tokenInputValue} onChange={(e: any) => setTokenInputValue(e.target.value)}></input>\n\t\t\t\t\t<div style={{ display: \"flex\", width: \"50%\", justifyContent: \"center\" }}>\n\t\t\t\t\t\t<button onClick={() => setRecoverTokenActivated(true)} className=\"preview loginInput loginButton\" > Recovery </button>\n\t\t\t\t\t\t<button onClick={importProject} className=\"preview loginInput loginButton\" > Import </button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && recoverTokenActivated && !waitingForTokenFromRecoveryKey) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> Introduce recovery key to get your token </span>\n\t\t\t\t\t<div className=\"informationDiv\"> This recovery key has to be unique so try with a personal phrase or something like that. </div>\n\t\t\t\t\t<input type=\"text\" className=\"input loginInput\" placeholder=\"Recovery key\" value={tokenFromRecoveryKeyInputValue} onChange={(e: any) => setTokenFromRecoveryKeyInputValue(e.target.value)}></input>\n\t\t\t\t\t<button onClick={recoverToken} className=\"preview loginInput loginButton\"> Submit </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else if (props.token === \"\" && importProjectActivated && recoverTokenActivated && waitingForTokenFromRecoveryKey) {\n\t\treturn (\n\t\t\t<div className=\"loginModalContainer\">\n\t\t\t\t<div className={`overlay ${props.loginModalStateActive ? \"overlayActive\" : \"\"}`} onClick={hideModal}></div>\n\t\t\t\t<div className={`loginModal editModal ${props.loginModalStateActive ? \"editModalActive\" : \"\"}`}>\n\t\t\t\t\t<span style={textStyle}> This is your project token </span>\n\t\t\t\t\t<span>{responseTokenFromRecovery != null ? responseTokenFromRecovery == 500 ? \"Wrong recovery key\" : responseTokenFromRecovery : \"\"}</span>\n\t\t\t\t\t<div className={`informationDiv`}> Make sure you save this token. You will need the key to edit you project the next time you want to edit it.</div>\n\t\t\t\t\t<button onClick={hideModal} className=\"preview loginButton loginInput\"> Continue </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (<>hi </>)\n}\n\n\nexport default ModalLogin;\n","import React, { useEffect, useState } from 'react';\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ModalLogin from './ModalLogin'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst Login = (props: any) => {\n\tconst handleClick = () => {\n\t\tprops.setLoginModalStateActive(true)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<FontAwesomeIcon size={\"1x\"} icon={faUser} className={`preview ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={handleClick} />\n\t\t\t<ModalLogin content={props.content} setContent={props.setContent} token={props.token} setToken={props.setToken} loginModalStateActive={props.loginModalStateActive} setLoginModalStateActive={props.setLoginModalStateActive} />\n\t\t</>\n\t);\n}\n\n\nexport default Login;\n\n","import React, { useState } from 'react'\n\nexport const Edit = (props: any) => {\n\n\treturn (\n\t\t<div className=\"preview\">\n\t\t\t<button onClick={() => {\n\t\t\t\tprops.setModalStateActive(true)\n\t\t\t}} className={`preview ${props.previewMode ? \"previewMode\" : \"\"} ${props.displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`}> Edit </button>\n\t\t</div>\n\t)\n}\n\nexport default Edit","import React, { useState } from 'react';\nimport './App.css';\nimport Preview from './Preview'\nimport AddButton from './AddButton'\nimport Modal from './Modal'\nimport DropdownMenu from './DropdownMenu'\nimport RenderContent from './RenderContent'\nimport Login from './Login'\n// import Styles from './StylesTextAlign'\nimport Edit from './Edit'\n\nfunction App() {\n  // const [inputValue, setInputValue] = useState(\"\")\n  const [token, setToken] = useState(\"\")\n  const [modalStateActive, setModalStateActive] = useState(false)\n  const [loginModalStateActive, setLoginModalStateActive] = useState(false)\n  const [addButtonStateActive, setAddButtonStateActive] = useState(false)\n  const [divCount, setDivCount] = useState(0)\n  const [displayButtons, setDisplayButtons] = useState(false)\n  const [array, setArray] = useState([\"\"])\n  const [input, setInput] = useState(\"\")\n  const [html, setHtml] = useState(\"\")\n  const [savedInput, setSavedInput] = useState({ textContent: \"\" })\n  const [savedIndex, setSavedIndex] = useState(1)\n  const [savedStyle, setSavedStyle] = useState({ textAlign: \"\", borderStyle: \"\" })\n  const [editCount, setEditCount] = useState(0)\n  const [previewMode, setPreviewMode] = useState(false)\n  const [content, setContent] = useState([])\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1)\n    var newArray: string[]\n    array.push(input)\n    var newArray = array\n    setArray(newArray)\n  }\n\n  // const handleInput = (event: any) => {\n  //   setInput(event.target.value)\n  //   savedInput.textContent = event.target.value\n  // }\n\n  const handleDiv = (content: string, index: number, event: any) => {\n    setInput(content)\n    setSavedIndex(index)\n    setSavedStyle(event.target.style)\n    setSavedInput(event.target)\n    setDisplayButtons(true)\n  }\n\n  // const editDiv = () => {\n  //   var newArray = array\n  //   newArray[savedIndex] = input\n  //   setArray(newArray)\n  //   setEditCount(editCount + 1)\n  //   setDisplayButtons(false)\n  //   savedStyle.borderStyle = \"none\"\n  //   setSavedInput({textContent: \"\"}) // This cant be done savedInput.textContent because it is a reference to event.target.textContent\n  //   setInput(\"\")\n  // }\n\n\n  const logStyle = (e: any) => {\n    console.log(e.target.style.borderStyle)\n  }\n\n  const handlePreview = (bool: boolean) => {\n    setPreviewMode(bool)\n  }\n\n\n  console.log(content)\n  return (\n    <div className=\"App\">\n      <div className=\"tools\">\n        <Login content={content} setContent={setContent} token={token} setToken={setToken} setLoginModalStateActive={setLoginModalStateActive} loginModalStateActive={loginModalStateActive} />\n        <Preview previewMode={previewMode} handlePreview={setPreviewMode} />\n        <Edit previewMode={previewMode} savedStyle={savedStyle} setModalStateActive={setModalStateActive} displayButtons={displayButtons} />\n        {/* <Styles previewMode={previewMode} displayButtons={displayButtons} /> */}\n        <AddButton content={content} setContent={setContent} addButtonStateActive={addButtonStateActive} setAddButtonStateActive={setAddButtonStateActive} editCount={editCount} setEditCount={setEditCount} previewMode={previewMode} addToDivCount={addToDivCount} />\n      </div>\n      <Modal input={input} setInput={setInput} savedStyle={savedStyle} savedInput={savedInput} previewMode={previewMode} modalStateActive={modalStateActive} setModalStateActive={setModalStateActive} />\n      <RenderContent setDisplayButtons={setDisplayButtons} setSavedStyle={setSavedStyle} savedStyle={savedStyle} content={content} />\n      {/* <ol contentEditable>\n        <li></li>\n      </ol> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}