[{"/home/a/Documents/GitHub/web-maker/src/App.tsx":"1","/home/a/Documents/GitHub/web-maker/src/Preview.tsx":"2","/home/a/Documents/GitHub/web-maker/src/index.tsx":"3","/home/a/Documents/GitHub/web-maker/src/reportWebVitals.ts":"4","/home/a/Documents/GitHub/web-maker/src/AddButton.tsx":"5","/home/a/Documents/GitHub/web-maker/src/DropdownMenu.tsx":"6","/home/a/Documents/GitHub/web-maker/src/DropdownItem.tsx":"7","/home/a/Documents/GitHub/web-maker/src/DropdownItems.tsx":"8","/home/a/Documents/GitHub/web-maker/src/RenderContent.tsx":"9","/home/a/Documents/GitHub/web-maker/src/RenderContent1.tsx":"10","/home/a/Documents/GitHub/web-maker/src/defaultTypes.js":"11","/home/a/Documents/GitHub/web-maker/src/AddItem.tsx":"12","/home/a/Documents/GitHub/web-maker/src/Edit.tsx":"13","/home/a/Documents/GitHub/web-maker/src/TextAlignCheckbox.tsx":"14","/home/a/Documents/GitHub/web-maker/src/Modal.tsx":"15","/home/a/Documents/GitHub/web-maker/src/StylesTextAlign.tsx":"16","/home/a/Documents/GitHub/web-maker/src/StylesToggle.tsx":"17","/home/a/Documents/GitHub/web-maker/src/AddImage.tsx":"18"},{"size":3196,"mtime":1608725882150,"results":"19","hashOfConfig":"20"},{"size":444,"mtime":1608477065438,"results":"21","hashOfConfig":"20"},{"size":500,"mtime":1608415433882,"results":"22","hashOfConfig":"20"},{"size":425,"mtime":1608415433882,"results":"23","hashOfConfig":"20"},{"size":2155,"mtime":1608727578502,"results":"24","hashOfConfig":"20"},{"size":132,"mtime":1608471384363,"results":"25","hashOfConfig":"20"},{"size":172,"mtime":1608478071770,"results":"26","hashOfConfig":"20"},{"size":1278,"mtime":1608727608322,"results":"27","hashOfConfig":"20"},{"size":1171,"mtime":1608732721970,"results":"28","hashOfConfig":"20"},{"size":399,"mtime":1608486851586,"results":"29","hashOfConfig":"20"},{"size":1090,"mtime":1608738618647,"results":"30","hashOfConfig":"20"},{"size":531,"mtime":1608583071787,"results":"31","hashOfConfig":"20"},{"size":391,"mtime":1608724567620,"results":"32","hashOfConfig":"20"},{"size":701,"mtime":1608718675970,"results":"33","hashOfConfig":"20"},{"size":1086,"mtime":1608725640449,"results":"34","hashOfConfig":"20"},{"size":1067,"mtime":1608719211480,"results":"35","hashOfConfig":"20"},{"size":634,"mtime":1608720219785,"results":"36","hashOfConfig":"20"},{"size":716,"mtime":1608727922731,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1waducl",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"41"},"/home/a/Documents/GitHub/web-maker/src/App.tsx",["89","90","91","92","93","94","95","96"],"import React, { useState } from 'react';\nimport './App.css';\nimport Preview from './Preview'\nimport AddButton from './AddButton'\nimport Modal from './Modal'\nimport DropdownMenu from './DropdownMenu'\nimport RenderContent from './RenderContent'\n// import Styles from './StylesTextAlign'\nimport Edit from './Edit'\n\nfunction App() {\n  // const [inputValue, setInputValue] = useState(\"\")\n  const [modalStateActive, setModalStateActive] = useState(false)\n  const [addButtonStateActive, setAddButtonStateActive] = useState(false)\n  const [divCount, setDivCount] = useState(0)\n  const [displayButtons, setDisplayButtons] = useState(false)\n  const [array, setArray] = useState([\"\"])\n  const [input, setInput] = useState(\"\")\n  const [html, setHtml] = useState(\"\")\n  const [savedInput, setSavedInput] = useState({ textContent: \"\" })\n  const [savedIndex, setSavedIndex] = useState(1)\n  const [savedStyle, setSavedStyle] = useState({ textAlign: \"\", borderStyle: \"\"})\n  const [editCount, setEditCount] = useState(0)\n  const [previewMode, setPreviewMode] = useState(false)\n  const [content, setContent] = useState([])\n\n  const addToDivCount = () => {\n    setDivCount(divCount + 1)\n    var newArray: string[]\n    array.push(input)\n    var newArray = array\n    setArray(newArray)\n  }\n\n  // const handleInput = (event: any) => {\n  //   setInput(event.target.value)\n  //   savedInput.textContent = event.target.value\n  // }\n\n  const handleDiv = (content: string, index: number, event: any) => {\n    setInput(content)\n    setSavedIndex(index)\n    setSavedStyle(event.target.style)\n    setSavedInput(event.target)\n    setDisplayButtons(true)\n  }\n\n  // const editDiv = () => {\n  //   var newArray = array\n  //   newArray[savedIndex] = input\n  //   setArray(newArray)\n  //   setEditCount(editCount + 1)\n  //   setDisplayButtons(false)\n  //   savedStyle.borderStyle = \"none\"\n  //   setSavedInput({textContent: \"\"}) // This cant be done savedInput.textContent because it is a reference to event.target.textContent\n  //   setInput(\"\")\n  // }\n\n\n  const logStyle = (e: any) => {\n    console.log(e.target.style.borderStyle)\n  }\n\n  const handlePreview = (bool: boolean) => {\n    setPreviewMode(bool)\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"tools\">\n        <Preview previewMode={previewMode} handlePreview={setPreviewMode} />\n        <Edit previewMode={previewMode} savedStyle={savedStyle} setModalStateActive={setModalStateActive} displayButtons={displayButtons} />\n        {/* <Styles previewMode={previewMode} displayButtons={displayButtons} /> */}\n        <AddButton content={content} setContent={setContent} addButtonStateActive={addButtonStateActive} setAddButtonStateActive={setAddButtonStateActive} editCount={editCount} setEditCount={setEditCount} previewMode={previewMode} addToDivCount={addToDivCount} />\n      </div>\n      <Modal input={input} setInput={setInput} savedStyle={savedStyle} savedInput={savedInput} previewMode={previewMode} modalStateActive={modalStateActive} setModalStateActive={setModalStateActive} />\n      <RenderContent setDisplayButtons={setDisplayButtons} setSavedStyle={setSavedStyle} savedStyle={savedStyle} content={content} />\n    </div>\n  );\n}\n\nexport default App;\n",["97","98"],"/home/a/Documents/GitHub/web-maker/src/Preview.tsx",["99","100"],"import react, {useState} from 'react';\n\nexport const Preveiw = (props: any) => {\n  return (\n    <div className=\"preview\">\n      <button className={`preview ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={() => props.handlePreview(true)}> Preview </button>\n      <button className={`preview ${props.previewMode ? \"\" : \"previewMode\"}`} onClick={() => props.handlePreview(false)}> UnPreview </button>\n    </div>\n  );\n}\n\nexport default Preveiw","/home/a/Documents/GitHub/web-maker/src/index.tsx",[],"/home/a/Documents/GitHub/web-maker/src/reportWebVitals.ts",[],"/home/a/Documents/GitHub/web-maker/src/AddButton.tsx",["101"],"import React, { useEffect, useState } from 'react';\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DropdownItems from './DropdownItems'\n\n\n/* <FontAwesomeIcon icon={faPlusSquare} style={{ width: \"\" }} onClick={props.addToDivCount} className={props.previewMode ? \"previewMode\" : \"\"} /> */\nconst AddButton = (props: any) => {\n  const [imageSrc, setImageSrc] = useState(\"\")\n  const [menuState, setMenuState] = useState(false)\n  const [addImageOverlayActive, setAddImageOverlayActive] = useState(false)\n  const [applyCount, setApplyCount] = useState(0)\n  console.log(menuState)\n\n  const handleClick = () => {\n    setMenuState(!menuState)\n  }\n\n  return (\n    <div className=\"addButtonContainer\">\n      <div className=\"\">\n        <FontAwesomeIcon size={\"2x\"} icon={faPlus} className={`addButton ${props.previewMode ? \"previewMode\" : \"\"}`} onClick={handleClick} />\n      </div>\n      <DropdownItems imageSrc={imageSrc} applyCount={applyCount} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} setAddImageOverlayActive={setAddImageOverlayActive} menuState={menuState} />\n      <div className={`overlay addButtonOverlay ${menuState ? \"overlayActive addButtonOverlayActive\" : \"\"}`} onClick={() => setMenuState(false)}></div>\n      <div className={`overlay addImageOverlay ${addImageOverlayActive ? \"overlayActive addImageOverlayActive\" : \"\"}`} onClick={() => setAddImageOverlayActive(false)}></div>\n      <div className={`addImageModal editModal ${addImageOverlayActive ? \"editModalActive\" : \"\"}`}>\n        <h2 className=\"addImageModalHeader\"> Add your image url </h2>\n        <input type=\"text\" className={`input ${props.previewMode ? \"previewMode\" : \"\"}`} value={imageSrc} placeholder=\"https:you-image-url\" onChange={(e: any) => setImageSrc(e.target.value)}  ></input>\n        <button className=\"preview addImageModalButton\" onClick={() => {\n          setAddImageOverlayActive(false);\n          setApplyCount(applyCount + 1)\n        }}> Apply </button>\n      </div>\n    </div>\n  );\n}\n\n\nexport default AddButton;\n","/home/a/Documents/GitHub/web-maker/src/DropdownMenu.tsx",[],"/home/a/Documents/GitHub/web-maker/src/DropdownItem.tsx",[],["102","103"],"/home/a/Documents/GitHub/web-maker/src/DropdownItems.tsx",["104"],"import React from 'react'\nimport DropdownItem from './DropdownItem'\nimport AddItem from './AddItem'\nimport AddImage from './AddImage'\n// import types from \"./types.js\"\n\nexport const DropdownItems = (props: any) => {\n\treturn (\n\t\t<div className={`dropdownMenuItems ${props.menuState ? \"showDropdownItems\" : \"notShowDropdownItems\"}`}>\n\t\t\t<AddItem type={\"h1\"} text={\"Title\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"h2\"} text={\"SubTitle\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"h3\"} text={\"Heading\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddItem type={\"p\"} text={\"Text\"} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} />\n\t\t\t<AddImage type={\"img\"} text={\"Image\"} src={props.imageSrc} applyCount={props.applyCount} content={props.content} setContent={props.setContent} editCount={props.editCount} setEditCount={props.setEditCount} setAddImageOverlayActive={props.setAddImageOverlayActive}/>\n\t\t</div>\n\t)\n}\n\nexport default DropdownItems","/home/a/Documents/GitHub/web-maker/src/RenderContent.tsx",["105","106","107","108","109","110"],"import React, { useState } from 'react'\nimport RenderContent1 from './RenderContent1'\nimport App from \"./App\"\n\nexport const RenderContent = (props: any) => {\n\treturn (\n\t\t<div className=\"render\">\n\t\t\t{console.log(props.content)}\n\t\t\t{\n\t\t\t\tprops.content.map((x: any, i: number) => (\n\t\t\t\t\t// Images must be done separatly\n\t\t\t\t\tx.type == \"img\" ? <img style={x.style} src={x.src} alt=\"Image\"></img>: \n\t\t\t\t\tReact.createElement(x.type, {\n            style: x.style,\n            contentEditable: \"true\",\n            placeholder: x.text,\n\t\t\t\t\t\tonClick: (e: any) => {\n\t\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t// props.handleDiv(e.target.innerText, i, e) // this could be set to e.target.innerHTML to use \" text \"\n\t\t\t\t\t\t\tprops.setDisplayButtons(true)\n\t\t\t\t\t\t\t// props.savedStyle.borderStyle = \"\"\n\t\t\t\t\t\t\t// e.target.style.border = \"2px solid black\"\n\t\t\t\t\t\t\t// e.target.style.borderRadius = \"5px\"\n\t\t\t\t\t\t\tprops.setSavedStyle(e.target.style)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocusout:  (e: any) => {\n\t\t\t\t\t\t\tprops.setDisplayButtons(false)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\tx.children.length != 0 && x.children != undefined ? <RenderContent1 content={x.children} /> : \"\",\n\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default RenderContent","/home/a/Documents/GitHub/web-maker/src/RenderContent1.tsx",["111","112","113","114"],"import React, { useState } from 'react'\nimport RenderContent from './RenderContent'\n\nexport const RenderContent1 = (props: any) => {\n\n\treturn (\n\t\t<div className=\"render\">\n\t\t\t{\n\t\t\t\tprops.content.map((x: any) =>\n\t\t\t\t(\n\t\t\t\t\tx.type == \"span\" ? <span style={x.style}> {x.text} </span> : x.type == \"div\" ? <div style={x.style}> {x.text} </div> : \"\"\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default RenderContent1","/home/a/Documents/GitHub/web-maker/src/defaultTypes.js",[],"/home/a/Documents/GitHub/web-maker/src/AddItem.tsx",["115"],"import React, { useState } from 'react'\nimport { item } from './defaultTypes.js'\n\nconst AddItem = (props: any) => {\n\tconst addTitle = () => {\n\t\tconsole.log(props.content)\n\t\t// var content = props.content\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, item)\n\t\tconsole.log(props)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}\n\treturn (\n\t\t<div onClick={addTitle} className=\"dropdown\">\n\t\t\tAdd {props.text}\n\t\t</div>\n\t)\n}\n\nexport default AddItem","/home/a/Documents/GitHub/web-maker/src/Edit.tsx",["116"],"import React, { useState } from 'react'\n\nexport const Edit = (props: any) => {\n\n\treturn (\n\t\t<div className=\"preview\">\n\t\t\t<button onClick={() => {\n\t\t\t\t// props.editDiv()\n\t\t\t\tprops.setModalStateActive(true)\n\t\t\t\t}} className={`preview ${props.previewMode ? \"previewMode\" : \"\"} ${props.displayButtons ? \"displayButtons\" : \"notDisplayButtons\"}`}> Edit </button>\n\t\t</div>\n\t)\n}\n\nexport default Edit","/home/a/Documents/GitHub/web-maker/src/TextAlignCheckbox.tsx",["117","118","119","120","121","122","123"],"import React, { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\n\nexport const TextAlignCheckbox = (props: any) => {\n  const handleClick = () => {\n    props.setSelected(props.type)\n    props.savedStyle.textAlign = props.type\n  }\n  return (\n    <label className=\"checkboxContainer\" onClick={handleClick}>\n      <input type=\"checkbox\" className=\"checkbox\" checked={props.selected == props.type ? true : false}></input>\n      <FontAwesomeIcon className=\"textAlignIcon\" icon={props.icon} />\n    </label>\n  )\n}\n\nexport default TextAlignCheckbox","/home/a/Documents/GitHub/web-maker/src/Modal.tsx",["124"],"import React, { useState } from 'react'\nimport StylesTextAlign from './StylesTextAlign'\nimport StylesToggle from './StylesToggle'\n\nexport const Modal = (props: any) => {\n\n  // const handleInput = (event: any) => {\n  //   props.setInput(event.target.value)\n  //   props.savedInput.textContent = props.html\n  // }\n  console.log(props.savedStyle)\n  console.log(props.html)\n  return (\n    <div className=\"inputContainer\">\n      {/* <input type=\"text\" value={props.input} className={`input ${props.previewMode ? \"previewMode\" : \"\"}`}></input> */}\n      {/* <button onClick={() => props.setModalStateActive(true)}> modal </button> */}\n      <div className={`editModal ${props.modalStateActive ? \"editModalActive\" : \"\"}`}>\n        <StylesToggle savedStyle={props.savedStyle} propertyToToggle={\"borderStyle\"} nameOfStyle={\"Border\"} />\n        <StylesTextAlign savedStyle={props.savedStyle} />\n      </div>\n      <div className={`overlay editOverlay ${props.modalStateActive ? \"overlayActive\" : \"\"}`} onClick={() => props.setModalStateActive(false)}></div>\n    </div>\n  )\n}\n\nexport default Modal","/home/a/Documents/GitHub/web-maker/src/StylesTextAlign.tsx",["125","126"],"import React, { useState } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignCenter, faAlignJustify, faAlignLeft, faAlignRight } from '@fortawesome/free-solid-svg-icons';\nimport TextAlignCheckbox from './TextAlignCheckbox'\nimport { preProcessFile } from 'typescript';\n\nexport const StylesTextAlign = (props: any) => {\n  const [selected, setSelected] = useState(\"\")\n\n  return (\n    <div className=\"textAlignContainer\">\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignJustify} type={\"justify\"}/>\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignCenter} type={\"center\"}/>\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignLeft} type={\"left\"}/>\n      <TextAlignCheckbox selected={selected} setSelected={setSelected} savedStyle={props.savedStyle} icon={faAlignRight} type={\"right\"}/>\n    </div>\n  )\n}\n\nexport default StylesTextAlign","/home/a/Documents/GitHub/web-maker/src/StylesToggle.tsx",["127"],"import React, { useState } from 'react'\n\nexport const StylesToggle = (props: any) => {\n\tconst handleCheckbox = (event: any) => {\n\t\tif (event.target.checked) {\n\t\t\tprops.savedStyle[props.propertyToToggle] = \"solid\"\n\t\t} else {\n\t\t\tprops.savedStyle[props.propertyToToggle] = \"none\"\n\t\t}\n\t}\n\n\tconsole.log(props.html)\n\treturn (\n\t\t<div className=\"stylesBorderContainer\">\n\t\t\t<label className=\"checkboxContainer\">\n\t\t\t\t<input onChange={(e: any) => handleCheckbox(e)} type=\"checkbox\" className=\"checkbox\"></input>\n\t\t\t\t<div className=\"checkboxFill\"></div>\n\t\t\t</label>\n\t\t\t<span> {props.nameOfStyle} </span>\n\t\t</div>\n\t)\n}\n\nexport default StylesToggle","/home/a/Documents/GitHub/web-maker/src/AddImage.tsx",["128","129","130"],"import React, { useEffect, useState } from 'react'\nimport { image } from './defaultTypes.js'\n\nconst AddImage = (props: any) => {\n\tconst addImage = () => {\n\t\tprops.setAddImageOverlayActive(true)\n\t}\n\n\tuseEffect(() => {\n\t\tif (props.applyCount == 0) {\n\t\t\treturn\n\t\t}\n\t\tconsole.log(props.content)\n\t\t// var content = props.content\n\t\tvar itemCopy: any = {}\n\t\tObject.assign(itemCopy, image)\n\t\tconsole.log(props)\n\t\titemCopy.text = props.text\n\t\titemCopy.type = props.type\n\t\titemCopy.src = props.src\n\t\tprops.content.push(itemCopy)\n\t\tprops.setEditCount(props.editCount + 1)\n\t}, [props.applyCount])\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={addImage} className=\"dropdown\">\n\t\t\t\tAdd {props.text}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default AddImage",{"ruleId":"131","severity":1,"message":"132","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":14},{"ruleId":"131","severity":1,"message":"136","line":19,"column":16,"nodeType":"133","messageId":"134","endLine":19,"endColumn":23},{"ruleId":"131","severity":1,"message":"137","line":21,"column":10,"nodeType":"133","messageId":"134","endLine":21,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":31,"column":9,"nodeType":"133","messageId":"140","endLine":31,"endColumn":17},{"ruleId":"131","severity":1,"message":"141","line":40,"column":9,"nodeType":"133","messageId":"134","endLine":40,"endColumn":18},{"ruleId":"131","severity":1,"message":"142","line":60,"column":9,"nodeType":"133","messageId":"134","endLine":60,"endColumn":17},{"ruleId":"131","severity":1,"message":"143","line":64,"column":9,"nodeType":"133","messageId":"134","endLine":64,"endColumn":22},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"131","severity":1,"message":"148","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"149","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"150","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"144","replacedBy":"151"},{"ruleId":"146","replacedBy":"152"},{"ruleId":"131","severity":1,"message":"153","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"154","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":12,"column":13,"nodeType":"157","messageId":"158","endLine":12,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":12,"column":24,"nodeType":"161","endLine":12,"endColumn":69},{"ruleId":"155","severity":1,"message":"162","line":30,"column":25,"nodeType":"157","messageId":"158","endLine":30,"endColumn":27},{"ruleId":"155","severity":1,"message":"162","line":30,"column":44,"nodeType":"157","messageId":"158","endLine":30,"endColumn":46},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"163","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":11,"column":13,"nodeType":"157","messageId":"158","endLine":11,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":11,"column":74,"nodeType":"157","messageId":"158","endLine":11,"endColumn":76},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"150","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"149","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"164","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":23},{"ruleId":"131","severity":1,"message":"165","line":3,"column":25,"nodeType":"133","messageId":"134","endLine":3,"endColumn":39},{"ruleId":"131","severity":1,"message":"166","line":3,"column":41,"nodeType":"133","messageId":"134","endLine":3,"endColumn":52},{"ruleId":"131","severity":1,"message":"167","line":3,"column":54,"nodeType":"133","messageId":"134","endLine":3,"endColumn":66},{"ruleId":"155","severity":1,"message":"156","line":12,"column":75,"nodeType":"157","messageId":"158","endLine":12,"endColumn":77},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"168","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},{"ruleId":"131","severity":1,"message":"169","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":24},{"ruleId":"131","severity":1,"message":"149","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"149","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":10,"column":24,"nodeType":"157","messageId":"158","endLine":10,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":23,"column":5,"nodeType":"172","endLine":23,"endColumn":23,"suggestions":"173"},"@typescript-eslint/no-unused-vars","'DropdownMenu' is defined but never used.","Identifier","unusedVar","'html' is assigned a value but never used.","'setHtml' is assigned a value but never used.","'savedIndex' is assigned a value but never used.","@typescript-eslint/no-redeclare","'newArray' is already defined.","redeclared","'handleDiv' is assigned a value but never used.","'logStyle' is assigned a value but never used.","'handlePreview' is assigned a value but never used.","no-native-reassign",["174"],"no-negated-in-lhs",["175"],"'react' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["174"],["175"],"'DropdownItem' is defined but never used.","'App' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'RenderContent' is defined but never used.","'faAlignCenter' is defined but never used.","'faAlignJustify' is defined but never used.","'faAlignLeft' is defined but never used.","'faAlignRight' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'preProcessFile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [props, props.applyCount]",{"range":"179","text":"180"},[565,583],"[props, props.applyCount]"]